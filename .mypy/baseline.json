{
  "files": {
    "mypy/applytype.py": [
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 100,
        "target": "mypy.applytype.apply_generic_arguments"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.applytype.apply_generic_arguments"
      }
    ],
    "mypy/bogus_type.py": [
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"type[FlexibleAlias[Any, Any]]\")",
        "offset": 24,
        "target": "mypy.bogus_type"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"type[FlexibleAlias[Any, Any]]\")",
        "offset": 0,
        "target": "mypy.bogus_type"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"type[FlexibleAlias[Any, Any]]\")",
        "offset": 0,
        "target": "mypy.bogus_type"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"type[FlexibleAlias[Any, Any]]\")",
        "offset": 0,
        "target": "mypy.bogus_type"
      }
    ],
    "mypy/build.py": [
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 209,
        "target": "mypy.build._build"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypy.build._build"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 1,
        "target": "mypy.build._build"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypy.build._build"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 90,
        "target": "mypy.build"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 11,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 7,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | str\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | str\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | int\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | str\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | list[str]\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any (from a limitation)]\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | list[str]\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any (from a limitation)]\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | list[int]\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"list[int | Any (from a limitation)]\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | list[int]\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"list[int | Any (from a limitation)]\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | str\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | str\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.cache_meta_from_dict"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 90,
        "target": "mypy.build.load_plugins_from_config"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.build.load_plugins_from_config"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"type[type]\")",
        "offset": 0,
        "target": "mypy.build.load_plugins_from_config"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.build.load_plugins_from_config"
      },
      {
        "code": "no-any-expr",
        "column": 10,
        "message": "Expression type contains \"Any\" (has type \"Any | str\")",
        "offset": 52,
        "target": "mypy.build.take_module_snapshot"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | str\")",
        "offset": 1,
        "target": "mypy.build.take_module_snapshot"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 83,
        "target": "mypy.build.BuildManager.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 231,
        "target": "mypy.build.BuildManager.load_fine_grained_deps"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[Any, Any]\")",
        "offset": 2,
        "target": "mypy.build.BuildManager.load_fine_grained_deps"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.build.BuildManager.load_fine_grained_deps"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.BuildManager.load_fine_grained_deps"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.BuildManager.load_fine_grained_deps"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression type contains \"Any\" (has type \"dict[Any, set[Any]]\")",
        "offset": 0,
        "target": "mypy.build.BuildManager.load_fine_grained_deps"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.BuildManager.load_fine_grained_deps"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 0,
        "target": "mypy.build.BuildManager.load_fine_grained_deps"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.BuildManager.load_fine_grained_deps"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.BuildManager.load_fine_grained_deps"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.BuildManager.load_fine_grained_deps"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.BuildManager.load_fine_grained_deps"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[Any, set[Any]]\")",
        "offset": 2,
        "target": "mypy.build.BuildManager.load_fine_grained_deps"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 37,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 1,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
        "offset": 0,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.BuildManager.add_stats"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 3,
        "target": "mypy.build.BuildManager.stats_summary"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"dict[Any, Any]\")",
        "offset": 4,
        "target": "mypy.build.deps_to_json"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.build.deps_to_json"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 61,
        "target": "mypy.build.write_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.write_deps_cache"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "\"baseline_format\" has type \"object\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 199,
        "target": "mypy.build.load_baseline"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.build.load_baseline"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.build.load_baseline"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.build.load_baseline"
      },
      {
        "code": "truthy-bool",
        "column": 7,
        "message": "\"baseline_errors\" has type \"object\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 11,
        "target": "mypy.build.load_baseline"
      },
      {
        "code": "truthy-bool",
        "column": 7,
        "message": "\"baseline_errors\" has type \"object\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 0,
        "target": "mypy.build.load_baseline"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any] | None\")",
        "offset": 32,
        "target": "mypy.build.read_plugins_snapshot"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any] | None\")",
        "offset": 3,
        "target": "mypy.build.read_plugins_snapshot"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.build.read_plugins_snapshot"
      },
      {
        "code": "unreachable",
        "column": 8,
        "message": "Statement is unreachable",
        "offset": 1,
        "target": "mypy.build.read_plugins_snapshot"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 3,
        "target": "mypy.build.read_plugins_snapshot"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 10,
        "target": "mypy.build.read_quickstart_file"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 6,
        "target": "mypy.build.read_quickstart_file"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.build.read_quickstart_file"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_quickstart_file"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_quickstart_file"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_quickstart_file"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_quickstart_file"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.build.read_quickstart_file"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
        "offset": 0,
        "target": "mypy.build.read_quickstart_file"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"(Any, Any, Any)\")",
        "offset": 1,
        "target": "mypy.build.read_quickstart_file"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_quickstart_file"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_quickstart_file"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_quickstart_file"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any] | None\")",
        "offset": 15,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any] | None\")",
        "offset": 3,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 7,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 10,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 5,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 75,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-return",
        "column": 4,
        "message": "Returning Any from function declared to return \"dict[str, FgDepMeta] | None\"",
        "offset": 3,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.read_deps_cache"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypy.build._load_json_file"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 15,
        "target": "mypy.build._load_json_file"
      },
      {
        "code": "no-any-return",
        "column": 8,
        "message": "Returning Any from function declared to return \"dict[str, Any] | None\"",
        "offset": 14,
        "target": "mypy.build._load_json_file"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build._load_json_file"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 89,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any] | None\")",
        "offset": 16,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any] | None\")",
        "offset": 4,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "unreachable",
        "column": 8,
        "message": "Statement is unreachable",
        "offset": 1,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 3,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 7,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "redundant-expr",
        "column": 12,
        "message": "Left operand of \"or\" is always false",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "redundant-expr",
        "column": 31,
        "message": "Left operand of \"or\" is always false",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "redundant-expr",
        "column": 12,
        "message": "Left operand of \"or\" is always false",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 5,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 6,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 24,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 2,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 5,
        "target": "mypy.build.find_cache_meta"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 14,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 4,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 10,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 4,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 34,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 6,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 7,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 2,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 12,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 3,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 8,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 6,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 3,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 2,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 1,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 3,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 3,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 5,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 4,
        "target": "mypy.build.validate_meta"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 12,
        "target": "mypy.build.json_dumps"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.build.json_dumps"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.build.json_dumps"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypy.build.write_cache"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 47,
        "target": "mypy.build.write_cache"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 52,
        "target": "mypy.build.write_cache"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 14,
        "target": "mypy.build.write_cache"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.write_cache"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.write_cache"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 4,
        "target": "mypy.build.write_cache"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"(str, CacheMeta)\")",
        "offset": 7,
        "target": "mypy.build.write_cache"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.write_cache"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.build.write_cache"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 183,
        "target": "mypy.build"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 106,
        "target": "mypy.build.State.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.State.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.State.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 6,
        "target": "mypy.build.State.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 2,
        "target": "mypy.build.State.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 3,
        "target": "mypy.build.State.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.State.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 2,
        "target": "mypy.build.State.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.State.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 3,
        "target": "mypy.build.State.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 2,
        "target": "mypy.build.State.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.State.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.State.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 2,
        "target": "mypy.build.State.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.State.__init__"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 29,
        "target": "mypy.build.State.xmeta"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(State) -> CacheMeta\")",
        "offset": 0,
        "target": "mypy.build"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 1,
        "target": "mypy.build.State.xmeta"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.State.xmeta"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 24,
        "target": "mypy.build.State.is_fresh"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 0,
        "target": "mypy.build.State.is_fresh"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 2,
        "target": "mypy.build.State.is_fresh"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 50,
        "target": "mypy.build.State.load_tree"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any] | None\")",
        "offset": 3,
        "target": "mypy.build.State.load_tree"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.State.load_tree"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any] | None\")",
        "offset": 2,
        "target": "mypy.build.State.load_tree"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 5,
        "target": "mypy.build.State.load_tree"
      },
      {
        "code": "unreachable",
        "column": 8,
        "message": "Statement is unreachable",
        "offset": 225,
        "target": "mypy.build.State.type_check_second_pass"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"(str, CacheMeta | None)\")",
        "offset": 108,
        "target": "mypy.build.State.write_cache"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"(str, CacheMeta | None)\")",
        "offset": 0,
        "target": "mypy.build.State.write_cache"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 62,
        "target": "mypy.build.State.generate_unused_ignore_notes"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 288,
        "target": "mypy.build.log_configuration"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.build.log_configuration"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 53,
        "target": "mypy.build.dispatch"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.dispatch"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.dispatch"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.build.dispatch"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 300,
        "target": "mypy.build.process_graph"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.process_graph"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 1,
        "target": "mypy.build.process_graph"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 1,
        "target": "mypy.build.process_graph"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.process_graph"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.process_graph"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.process_graph"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> int\")",
        "offset": 3,
        "target": "mypy.build.process_graph"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.process_graph"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.process_graph"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.process_graph"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 3,
        "target": "mypy.build.process_graph"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 5,
        "target": "mypy.build.process_graph"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 4,
        "target": "mypy.build.process_graph"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.build.process_graph"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> int\")",
        "offset": 107,
        "target": "mypy.build.order_ascc"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> int\")",
        "offset": 115,
        "target": "mypy.build.sorted_components"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> int\")",
        "offset": 0,
        "target": "mypy.build.sorted_components"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.sorted_components"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.sorted_components"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.sorted_components"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.sorted_components"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.sorted_components"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.build.sorted_components"
      }
    ],
    "mypy/checker.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.semanal\" does not explicitly export attribute \"set_callable_name\"; implicit reexport disabled",
        "offset": 77,
        "target": "mypy.checker"
      },
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.semanal\" does not explicitly export attribute \"set_callable_name\"; implicit reexport disabled",
        "offset": 0,
        "target": "mypy.checker"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 450,
        "target": "mypy.checker.TypeChecker.check_overlapping_overloads"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 16,
        "target": "mypy.checker.TypeChecker.check_overlapping_overloads"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 10,
        "target": "mypy.checker.TypeChecker.check_overlapping_overloads"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 5,
        "target": "mypy.checker.TypeChecker.check_overlapping_overloads"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 395,
        "target": "mypy.checker.TypeChecker.check_func_item"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 124,
        "target": "mypy.checker.TypeChecker.check_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 221,
        "target": "mypy.checker.TypeChecker.check_for_missing_annotations"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_for_missing_annotations"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 17,
        "target": "mypy.checker.TypeChecker.check_for_missing_annotations"
      },
      {
        "code": "redundant-expr",
        "column": 11,
        "message": "Left operand of \"and\" is always true",
        "offset": 19,
        "target": "mypy.checker.TypeChecker.check___new___signature"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 187,
        "target": "mypy.checker.TypeChecker.check_overlapping_op_methods"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 162,
        "target": "mypy.checker.TypeChecker.expand_typevars"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"product[tuple[Any, ...]]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.expand_typevars"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"dict[Any, Any]\")",
        "offset": 1,
        "target": "mypy.checker.TypeChecker.expand_typevars"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.expand_typevars"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.expand_typevars"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"dict[Any, Any]\")",
        "offset": 1,
        "target": "mypy.checker.TypeChecker.expand_typevars"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"dict[Any, Any]\")",
        "offset": 1,
        "target": "mypy.checker.TypeChecker.expand_typevars"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 174,
        "target": "mypy.checker.TypeChecker.get_op_other_domain"
      },
      {
        "code": "redundant-expr",
        "column": 11,
        "message": "Left operand of \"and\" is always true",
        "offset": 41,
        "target": "mypy.checker.TypeChecker.check_override"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 3,
        "target": "mypy.checker.TypeChecker.check_override"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_override"
      },
      {
        "code": "no-any-expr",
        "column": 77,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_override"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 9,
        "target": "mypy.checker.TypeChecker.check_override"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_override"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 1,
        "target": "mypy.checker.TypeChecker.check_override"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_override"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 77,
        "target": "mypy.checker.TypeChecker.check__exit__return_type"
      },
      {
        "code": "unreachable",
        "column": 12,
        "message": "Statement is unreachable",
        "offset": 287,
        "target": "mypy.checker.TypeChecker.determine_type_of_class_member"
      },
      {
        "code": "truthy-bool",
        "column": 23,
        "message": "\"signature\" has type \"Type\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 251,
        "target": "mypy.checker.TypeChecker.check_assignment"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 102,
        "target": "mypy.checker.TypeChecker.check_assignment"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_assignment"
      },
      {
        "code": "truthy-bool",
        "column": 19,
        "message": "\"rvalue_type\" has type \"ProperType\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 9,
        "target": "mypy.checker.TypeChecker.check_assignment"
      },
      {
        "code": "truthy-bool",
        "column": 19,
        "message": "\"rvalue_type\" has type \"ProperType\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_assignment"
      },
      {
        "code": "redundant-expr",
        "column": 20,
        "message": "Left operand of \"and\" is always true",
        "offset": 97,
        "target": "mypy.checker.TypeChecker.check_compatibility_all_supers"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "\"compare_type\" has type \"ProperType\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 50,
        "target": "mypy.checker.TypeChecker.check_compatibility_super"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 1,
        "target": "mypy.checker.TypeChecker.check_compatibility_super"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_compatibility_super"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 1,
        "target": "mypy.checker.TypeChecker.check_compatibility_super"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 58,
        "target": "mypy.checker.TypeChecker.lvalue_type_from_base"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.lvalue_type_from_base"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 170,
        "target": "mypy.checker.TypeChecker.is_assignable_slot"
      },
      {
        "code": "no-any-explicit",
        "column": 36,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 184,
        "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 127,
        "target": "mypy.checker.TypeChecker.type_is_iterable"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.type_is_iterable"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "\"var\" has type \"Var\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 168,
        "target": "mypy.checker.TypeChecker.set_inferred_type"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "\"var\" has type \"Var\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.set_inferred_type"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 150,
        "target": "mypy.checker.TypeChecker.check_member_assignment"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 10,
        "target": "mypy.checker.TypeChecker.check_member_assignment"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_member_assignment"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 624,
        "target": "mypy.checker.TypeChecker.visit_decorator"
      },
      {
        "code": "no-any-expr",
        "column": 85,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 4,
        "target": "mypy.checker.TypeChecker.visit_decorator"
      },
      {
        "code": "no-any-expr",
        "column": 85,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.visit_decorator"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 1262,
        "target": "mypy.checker.TypeChecker.check_subtype"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_subtype"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"(type[CallableType], type[Overloaded])\")",
        "offset": 4,
        "target": "mypy.checker.TypeChecker.check_subtype"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"(type[CallableType], type[Overloaded])\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_subtype"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_subtype"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checker.TypeChecker.check_subtype"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[misc]\" instead)",
        "offset": 75,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 292,
        "target": "mypy.checker.TypeChecker.iterable_item_type"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 603,
        "target": "mypy.checker.overload_can_never_match"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 10,
        "target": "mypy.checker.is_more_general_arg_prefix"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 1,
        "target": "mypy.checker.is_more_general_arg_prefix"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 344,
        "target": "mypy.checker.group_comparison_operands"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.checker.group_comparison_operands"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.checker.group_comparison_operands"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 6,
        "target": "mypy.checker.is_typed_callable"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 10,
        "target": "mypy.checker.is_untyped_decorator"
      }
    ],
    "mypy/checkexpr.py": [
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 243,
        "target": "mypy.checkexpr.ExpressionChecker.analyze_ref_expr"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.analyze_ref_expr"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[misc]\" instead)",
        "offset": 1,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 114,
        "target": "mypy.checkexpr.ExpressionChecker.visit_call_expr_inner"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.visit_call_expr_inner"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 11,
        "target": "mypy.checkexpr.ExpressionChecker.visit_call_expr_inner"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.visit_call_expr_inner"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 124,
        "target": "mypy.checkexpr.ExpressionChecker.method_fullname"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.method_fullname"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 31,
        "target": "mypy.checkexpr.ExpressionChecker.always_returns_none"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.always_returns_none"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 16,
        "target": "mypy.checkexpr.ExpressionChecker.defn_returns_none"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.defn_returns_none"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 6,
        "target": "mypy.checkexpr.ExpressionChecker.defn_returns_none"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.defn_returns_none"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 12,
        "target": "mypy.checkexpr.ExpressionChecker.check_runtime_protocol_test"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.check_runtime_protocol_test"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 8,
        "target": "mypy.checkexpr.ExpressionChecker.check_protocol_issubclass"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.check_protocol_issubclass"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 288,
        "target": "mypy.checkexpr.ExpressionChecker.apply_signature_hook"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 17,
        "target": "mypy.checkexpr.ExpressionChecker.apply_signature_hook"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 97,
        "target": "mypy.checkexpr.ExpressionChecker.check_call_expr_with_callee_type"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.check_call_expr_with_callee_type"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 56,
        "target": "mypy.checkexpr.ExpressionChecker.check_call"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 144,
        "target": "mypy.checkexpr.ExpressionChecker.analyze_type_type_callee"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 3,
        "target": "mypy.checkexpr.ExpressionChecker.analyze_type_type_callee"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 15,
        "target": "mypy.checkexpr.ExpressionChecker.analyze_type_type_callee"
      },
      {
        "code": "unreachable",
        "column": 20,
        "message": "Statement is unreachable",
        "offset": 402,
        "target": "mypy.checkexpr.ExpressionChecker.check_argument_types"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 36,
        "target": "mypy.checkexpr.ExpressionChecker.check_arg"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.check_arg"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"zip[tuple[Any, ...]]\")",
        "offset": 56,
        "target": "mypy.checkexpr.ExpressionChecker.check_overload_call"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.check_overload_call"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.check_overload_call"
      },
      {
        "code": "no-any-expr",
        "column": 65,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 5,
        "target": "mypy.checkexpr.ExpressionChecker.check_overload_call"
      },
      {
        "code": "no-any-expr",
        "column": 65,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.check_overload_call"
      },
      {
        "code": "no-any-expr",
        "column": 71,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 3,
        "target": "mypy.checkexpr.ExpressionChecker.check_overload_call"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 302,
        "target": "mypy.checkexpr.ExpressionChecker.combine_function_signatures"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 915,
        "target": "mypy.checkexpr.ExpressionChecker.check_boolean_op"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.check_boolean_op"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 145,
        "target": "mypy.checkexpr.ExpressionChecker.visit_index_with_type"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.visit_index_with_type"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"(type[CallableType], type[Overloaded])\")",
        "offset": 208,
        "target": "mypy.checkexpr.ExpressionChecker.visit_type_application"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.visit_type_application"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[misc]\" instead)",
        "offset": 40,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 39,
        "target": "mypy.checkexpr.ExpressionChecker.apply_type_arguments_to_callable"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 335,
        "target": "mypy.checkexpr.ExpressionChecker.infer_lambda_type_using_context"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 4,
        "target": "mypy.checkexpr.ExpressionChecker.infer_lambda_type_using_context"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 9,
        "target": "mypy.checkexpr.ExpressionChecker.infer_lambda_type_using_context"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 268,
        "target": "mypy.checkexpr.ExpressionChecker.check_for_comp"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 13,
        "target": "mypy.checkexpr.ExpressionChecker.visit_conditional_expr"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 170,
        "target": "mypy.checkexpr.ExpressionChecker.has_member"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkexpr.ExpressionChecker.has_member"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 405,
        "target": "mypy.checkexpr.arg_approximate_similarity"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"(type[CallableType], type[Overloaded], type[TypeType])\")",
        "offset": 1,
        "target": "mypy.checkexpr.arg_approximate_similarity"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkexpr.arg_approximate_similarity"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 20,
        "target": "mypy.checkexpr.arg_approximate_similarity"
      }
    ],
    "mypy/checkmember.py": [
      {
        "code": "redundant-expr",
        "column": 15,
        "message": "Left operand of \"and\" is always true",
        "offset": 252,
        "target": "mypy.checkmember.analyze_instance_member_access"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 189,
        "target": "mypy.checkmember.analyze_member_var_access"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 21,
        "target": "mypy.checkmember.analyze_member_var_access"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.checkmember.analyze_member_var_access"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"chk\" has type \"TypeChecker\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 11,
        "target": "mypy.checkmember.analyze_member_var_access"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"chk\" has type \"TypeChecker\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 0,
        "target": "mypy.checkmember.analyze_member_var_access"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 81,
        "target": "mypy.checkmember.analyze_descriptor_access"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 79,
        "target": "mypy.checkmember.analyze_var"
      },
      {
        "code": "truthy-bool",
        "column": 7,
        "message": "\"result\" has type \"Type\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 11,
        "target": "mypy.checkmember.analyze_var"
      },
      {
        "code": "truthy-bool",
        "column": 7,
        "message": "\"result\" has type \"Type\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 0,
        "target": "mypy.checkmember.analyze_var"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 11,
        "target": "mypy.checkmember.freeze_type_vars"
      },
      {
        "code": "unreachable",
        "column": 66,
        "message": "Right operand of \"and\" is never evaluated",
        "offset": 167,
        "target": "mypy.checkmember.analyze_class_attribute_access"
      },
      {
        "code": "unreachable",
        "column": 8,
        "message": "Statement is unreachable",
        "offset": 39,
        "target": "mypy.checkmember.analyze_class_attribute_access"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 107,
        "target": "mypy.checkmember.add_class_tvars"
      },
      {
        "code": "unreachable",
        "column": 8,
        "message": "Statement is unreachable",
        "offset": 116,
        "target": "mypy.checkmember.is_valid_constructor"
      }
    ],
    "mypy/checkstrformat.py": [
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"dict[str, str | Any]\")",
        "offset": 125,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[str, str | Any]\")",
        "offset": 1,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 0,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"dict[str, str | Any]\")",
        "offset": 3,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"dict[str, str | Any]\")",
        "offset": 1,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"dict[str, str | Any]\")",
        "offset": 1,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"dict[str, str | Any]\")",
        "offset": 1,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"dict[str, str | Any]\")",
        "offset": 3,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 0,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"dict[str, str | Any]\")",
        "offset": 3,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 0,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"dict[str, str | Any]\")",
        "offset": 3,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 0,
        "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 3,
        "target": "mypy.checkstrformat.ConversionSpecifier.has_key"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 3,
        "target": "mypy.checkstrformat.ConversionSpecifier.has_star"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.ConversionSpecifier.has_star"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.ConversionSpecifier.has_star"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.ConversionSpecifier.has_star"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 0,
        "target": "mypy.checkstrformat.ConversionSpecifier.has_star"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.ConversionSpecifier.has_star"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.ConversionSpecifier.has_star"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 38,
        "target": "mypy.checkstrformat.parse_format_value"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 0,
        "target": "mypy.checkstrformat.parse_format_value"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None | bool\")",
        "offset": 0,
        "target": "mypy.checkstrformat.parse_format_value"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.parse_format_value"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.parse_format_value"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.parse_format_value"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 7,
        "target": "mypy.checkstrformat.parse_format_value"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 0,
        "target": "mypy.checkstrformat.parse_format_value"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None | bool\")",
        "offset": 0,
        "target": "mypy.checkstrformat.parse_format_value"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.checkstrformat.parse_format_value"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.parse_format_value"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.parse_format_value"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 5,
        "target": "mypy.checkstrformat.parse_format_value"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 117,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 9,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None | bool\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 59,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"Literal[True] | str | Any | None\")",
        "offset": 1,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 1,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 3,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 4,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 8,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 2,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 75,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 75,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 21,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 9,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 65,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 9,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 3,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any | bool\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any | bool\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 92,
        "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None | bool\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 1,
        "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 9,
        "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 4,
        "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 3,
        "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 10,
        "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 1,
        "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 2,
        "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 3,
        "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 3,
        "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 69,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 35,
        "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 8,
        "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 1,
        "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 69,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 69,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 69,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 69,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 69,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 58,
        "target": "mypy.checkstrformat.StringFormatterChecker.analyze_conversion_specifiers"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.analyze_conversion_specifiers"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.analyze_conversion_specifiers"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 80,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 3,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 6,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 52,
        "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 3,
        "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 4,
        "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
      }
    ],
    "mypy/config_parser.py": [
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 24,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 8,
        "target": "mypy.config_parser.parse_version"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.config_parser.parse_version"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 25,
        "target": "mypy.config_parser.try_split"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.config_parser.try_split"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.config_parser.try_split"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.try_split"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(str, (Any) -> Any)\")",
        "offset": 67,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"(Any) -> Any\")",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-return",
        "column": 43,
        "message": "Returning Any from function declared to return \"str | bool | int | float | dict[str, str] | list[str] | (int, int)\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 3,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 9,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> list[str]\")",
        "offset": 8,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> list[str]\")",
        "offset": 1,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> str\")",
        "offset": 1,
        "target": "mypy.config_parser"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 38,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression type contains \"Any\" (has type \"dict[str | Any (from a limitation), Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"Any | dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 2,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"Any | dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-explicit",
        "column": 16,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 73,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 77,
        "message": "Expression type contains \"Any\" (has type \"MutableMapping[str, Any]\")",
        "offset": 9,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"MutableMapping[str, Any]\")",
        "offset": 11,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"MutableMapping[str, Any]\")",
        "offset": 4,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 5,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"MutableMapping[str, Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"ItemsView[str, Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.parse_config_file"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 40,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 32,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 4,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"Literal[False] | Any\")",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 64,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 4,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.config_parser.destructure_overrides"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
        "offset": 12,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 3,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 7,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
        "offset": 4,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 19,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 66,
        "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 66,
        "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"type[Any] | type[None]\")",
        "offset": 6,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
        "offset": 1,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
        "offset": 3,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": null,
        "column": 24,
        "message": "Error code \"no-any-expr\" not covered by \"type: ignore\" comment",
        "offset": 0,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
        "offset": 0,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 11,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.config_parser.parse_section"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 4,
        "target": "mypy.config_parser.convert_to_boolean"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 2,
        "target": "mypy.config_parser.convert_to_boolean"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 2,
        "target": "mypy.config_parser.convert_to_boolean"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.config_parser.convert_to_boolean"
      }
    ],
    "mypy/constraints.py": [
      {
        "code": "unreachable",
        "column": 20,
        "message": "Statement is unreachable",
        "offset": 270,
        "target": "mypy.constraints.any_constraints"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"(type[CallableType], type[Overloaded])\")",
        "offset": 154,
        "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"(type[CallableType], type[Overloaded])\")",
        "offset": 0,
        "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 14,
        "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[misc]\" instead)",
        "offset": 11,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 23,
        "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
      },
      {
        "code": "no-any-expr",
        "column": 80,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 5,
        "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 34,
        "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
      },
      {
        "code": "no-any-expr",
        "column": 80,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 5,
        "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 89,
        "target": "mypy.constraints.ConstraintBuilderVisitor.visit_callable_type"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 186,
        "target": "mypy.constraints.ConstraintBuilderVisitor.visit_overloaded"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 10,
        "target": "mypy.constraints.ConstraintBuilderVisitor.visit_type_type"
      }
    ],
    "mypy/copytype.py": [
      {
        "code": "no-any-explicit",
        "column": 44,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 101,
        "target": "mypy.copytype.TypeShallowCopier.visit_type_type"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.copytype.TypeShallowCopier.visit_type_type"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.copytype.TypeShallowCopier.visit_type_type"
      }
    ],
    "mypy/dmypy/client.py": [
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 152,
        "target": "mypy.dmypy.client.main"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 6,
        "target": "mypy.dmypy.client.main"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.main"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 39,
        "target": "mypy.dmypy.client.do_start"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 33,
        "target": "mypy.dmypy.client.start_server"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy.client.start_server"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.start_server"
      },
      {
        "code": "no-any-expr",
        "column": 81,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.start_server"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.dmypy.client.start_server"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 37,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 4,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 80,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 84,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 3,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_run"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 9,
        "target": "mypy.dmypy.client.do_status"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy.client.do_status"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 5,
        "target": "mypy.dmypy.client.do_status"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_status"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy.client.do_status"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.dmypy.client.do_status"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_status"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 0,
        "target": "mypy.dmypy.client.do_status"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.dmypy.client.do_status"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy.client.do_status"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy.client.do_status"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 9,
        "target": "mypy.dmypy.client.do_stop"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_stop"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy.client.do_stop"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy.client.do_stop"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 9,
        "target": "mypy.dmypy.client.do_kill"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_kill"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 13,
        "target": "mypy.dmypy.client.do_check"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_check"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_check"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.dmypy.client.do_check"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy.client.do_check"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_check"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_check"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_check"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 19,
        "target": "mypy.dmypy.client.do_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy.client.do_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 83,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.dmypy.client.do_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.dmypy.client.do_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy.client.do_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 10,
        "target": "mypy.dmypy.client.do_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy.client.do_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 75,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy.client.do_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 76,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy.client.do_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy.client.do_suggest"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 7,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 66,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 66,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"dict[Any, Any]\")",
        "offset": 0,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy.client.check_output"
      },
      {
        "code": "no-any-expr",
        "column": 10,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 17,
        "target": "mypy.dmypy.client.do_hang"
      },
      {
        "code": "no-any-expr",
        "column": 10,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.dmypy.client.do_hang"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_hang"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_hang"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "no-any-expr",
        "column": 72,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "assignment",
        "column": 12,
        "message": "Incompatible types in assignment (expression has type \"IO[Any]\", variable has type \"TextIO\")",
        "offset": 1,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "assignment",
        "column": 38,
        "message": "Incompatible types in assignment (expression has type \"IO[Any]\", variable has type \"TextIO\")",
        "offset": 0,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.do_daemon"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 12,
        "target": "mypy.dmypy.client.request"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 27,
        "target": "mypy.dmypy.client.request"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 17,
        "target": "mypy.dmypy.client.check_status"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 7,
        "target": "mypy.dmypy.client.check_status"
      },
      {
        "code": "no-any-expr",
        "column": 10,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.dmypy.client.check_status"
      },
      {
        "code": "no-any-expr",
        "column": 10,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.check_status"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy.client.check_status"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 4,
        "target": "mypy.dmypy.client.check_status"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.dmypy.client.check_status"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy.client.check_status"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy.client.check_status"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 15,
        "target": "mypy.dmypy.client.read_status"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.dmypy.client.read_status"
      }
    ],
    "mypy/dmypy_server.py": [
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"dict[Any, Any]\")",
        "offset": 215,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-explicit",
        "column": 20,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 65,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 5,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 3,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 3,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 0,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 9,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 0,
        "target": "mypy.dmypy_server.Server.serve"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 13,
        "target": "mypy.dmypy_server.Server.run_command"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.dmypy_server.Server.run_command"
      },
      {
        "code": "no-any-return",
        "column": 12,
        "message": "Returning Any from function declared to return \"dict[str, object]\"",
        "offset": 7,
        "target": "mypy.dmypy_server.Server.run_command"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy_server.Server.run_command"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 7,
        "target": "mypy.dmypy_server.Server.cmd_status"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.dmypy_server.Server.cmd_status"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.dmypy_server.Server.cmd_status"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.dmypy_server.Server.cmd_status"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 52,
        "target": "mypy.dmypy_server.Server.cmd_run"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 9,
        "target": "mypy.dmypy_server.Server.cmd_check"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any (unannotated)\"",
        "offset": 24,
        "target": "mypy.dmypy_server.Server.cmd_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 11,
        "target": "mypy.dmypy_server.Server.cmd_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.dmypy_server.Server.cmd_recheck"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy_server.Server.cmd_recheck"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 2,
        "target": "mypy.dmypy_server.Server.check"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 8,
        "target": "mypy.dmypy_server.Server.check"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 8,
        "target": "mypy.dmypy_server.Server.check"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy_server.Server.check"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 7,
        "target": "mypy.dmypy_server.Server.update_stats"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 4,
        "target": "mypy.dmypy_server.Server.update_stats"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.dmypy_server.Server.update_stats"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 8,
        "target": "mypy.dmypy_server.Server.initialize_fine_grained"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 16,
        "target": "mypy.dmypy_server.Server.initialize_fine_grained"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 18,
        "target": "mypy.dmypy_server.Server.initialize_fine_grained"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 1,
        "target": "mypy.dmypy_server.Server.initialize_fine_grained"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 4,
        "target": "mypy.dmypy_server.Server.initialize_fine_grained"
      },
      {
        "code": "no-any-expr",
        "column": 65,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.dmypy_server.Server.initialize_fine_grained"
      },
      {
        "code": "no-any-expr",
        "column": 81,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
        "offset": 0,
        "target": "mypy.dmypy_server.Server.initialize_fine_grained"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 38,
        "target": "mypy.dmypy_server.Server.initialize_fine_grained"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 264,
        "target": "mypy.dmypy_server.Server.increment_output"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 7,
        "target": "mypy.dmypy_server.Server.increment_output"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 71,
        "target": "mypy.dmypy_server.Server.cmd_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 9,
        "target": "mypy.dmypy_server.Server.cmd_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.dmypy_server.Server.cmd_suggest"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 29,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[import]\" instead)",
        "offset": 2,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 5,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 11,
        "target": "mypy.dmypy_server.get_meminfo"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.dmypy_server.get_meminfo"
      }
    ],
    "mypy/dmypy_util.py": [
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 16,
        "target": "mypy.dmypy_util.receive"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 10,
        "target": "mypy.dmypy_util.receive"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.dmypy_util.receive"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 1,
        "target": "mypy.dmypy_util.receive"
      },
      {
        "code": "no-any-expr",
        "column": 59,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy_util.receive"
      },
      {
        "code": "no-any-expr",
        "column": 59,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.dmypy_util.receive"
      }
    ],
    "mypy/errors.py": [
      {
        "code": "unreachable",
        "column": 16,
        "message": "Statement is unreachable",
        "offset": 870,
        "target": "mypy.errors.Errors.render_messages"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> (Any, Any)\")",
        "offset": 31,
        "target": "mypy.errors.Errors.sort_messages"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression type contains \"Any\" (has type \"(Any, Any)\")",
        "offset": 0,
        "target": "mypy.errors.Errors.sort_messages"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.errors.Errors.sort_messages"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.errors.Errors.sort_messages"
      }
    ],
    "mypy/expandtype.py": [
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 39,
        "target": "mypy.expandtype.freshen_function_type_vars"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 78,
        "target": "mypy.expandtype.ExpandTypeVisitor.visit_param_spec"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 3,
        "target": "mypy.expandtype.ExpandTypeVisitor.visit_param_spec"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 67,
        "target": "mypy.expandtype.ExpandTypeVisitor.visit_callable_type"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.expandtype.ExpandTypeVisitor.visit_callable_type"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 23,
        "target": "mypy.expandtype.ExpandTypeVisitor.visit_overloaded"
      }
    ],
    "mypy/fastparse.py": [
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 113,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 14,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 60,
        "target": "mypy.fastparse.parse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.fastparse.parse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.parse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.parse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.parse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.parse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.parse"
      },
      {
        "code": "no-any-return",
        "column": 4,
        "message": "Returning Any from function declared to return \"MypyFile\"",
        "offset": 16,
        "target": "mypy.fastparse.parse"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.parse"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 18,
        "target": "mypy.fastparse.parse_type_ignore_tag"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.fastparse.parse_type_ignore_tag"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.fastparse.parse_type_ignore_tag"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.fastparse.parse_type_ignore_tag"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypy.fastparse.parse_type_ignore_tag"
      },
      {
        "code": "no-any-explicit",
        "column": 33,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 27,
        "target": "mypy.fastparse.parse_type_comment"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.parse_type_comment"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.parse_type_comment"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[Expression]\")",
        "offset": 9,
        "target": "mypy.fastparse.parse_type_comment"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"type[Name]\")",
        "offset": 43,
        "target": "mypy.fastparse.is_no_type_check_decorator"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"type[Attribute]\")",
        "offset": 2,
        "target": "mypy.fastparse.is_no_type_check_decorator"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"type[Name]\")",
        "offset": 1,
        "target": "mypy.fastparse.is_no_type_check_decorator"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 21,
        "target": "mypy.fastparse.ASTConverter.__init__"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 23,
        "target": "mypy.fastparse.ASTConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"dict[type, (AST | None) -> Any]\")",
        "offset": 4,
        "target": "mypy.fastparse.ASTConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"(AST | None) -> Any | None\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"(AST | None) -> Any | None\")",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"dict[type, (AST | None) -> Any]\")",
        "offset": 3,
        "target": "mypy.fastparse.ASTConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"(AST | None) -> Any | Any\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 5,
        "target": "mypy.fastparse.ASTConverter.set_line"
      },
      {
        "code": "no-any-expr",
        "column": 72,
        "message": "Expression type contains \"Any\" (has type \"type[expr]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.set_line"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.set_line"
      },
      {
        "code": "no-any-expr",
        "column": 78,
        "message": "Expression type contains \"Any\" (has type \"type[expr]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.set_line"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.fastparse.ASTConverter.translate_opt_expr_list"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.translate_opt_expr_list"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"(type[AsyncFunctionDef], type[ClassDef], type[FunctionDef])\")",
        "offset": 7,
        "target": "mypy.fastparse.ASTConverter.get_lineno"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"(type[AsyncFunctionDef], type[ClassDef], type[FunctionDef])\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.get_lineno"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[AsyncFunctionDef]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.get_lineno"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[AsyncFunctionDef]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.get_lineno"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression type contains \"Any\" (has type \"type[ClassDef]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.get_lineno"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression type contains \"Any\" (has type \"type[ClassDef]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.get_lineno"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression type contains \"Any\" (has type \"type[FunctionDef]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.get_lineno"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression type contains \"Any\" (has type \"type[FunctionDef]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.get_lineno"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 20,
        "target": "mypy.fastparse.ASTConverter.translate_stmt_list"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.translate_stmt_list"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Add]\")",
        "offset": 20,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Add], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Sub]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Sub], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Mult]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Mult], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[MatMult]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[MatMult], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Div]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Div], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Mod]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Mod], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Pow]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Pow], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[LShift]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[LShift], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[RShift]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[RShift], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[BitOr]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[BitOr], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[BitXor]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[BitXor], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[BitAnd]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[BitAnd], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[FloorDiv]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[FloorDiv], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Gt]\")",
        "offset": 11,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Gt], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Lt]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Lt], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Eq]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Eq], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[GtE]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[GtE], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[LtE]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[LtE], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[NotEq]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[NotEq], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Is]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Is], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[IsNot]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[IsNot], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[In]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[In], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[NotIn]\")",
        "offset": 1,
        "target": "mypy.fastparse"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[NotIn], str)\")",
        "offset": 0,
        "target": "mypy.fastparse"
      },
      {
        "code": "redundant-expr",
        "column": 11,
        "message": "Left operand of \"and\" is always true",
        "offset": 193,
        "target": "mypy.fastparse.ASTConverter._check_ifstmt_for_overloads"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"type[FunctionType]\")",
        "offset": 152,
        "target": "mypy.fastparse.ASTConverter.do_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression type contains \"Any\" (has type \"type[Ellipsis]\")",
        "offset": 3,
        "target": "mypy.fastparse.ASTConverter.do_func_def"
      },
      {
        "code": "redundant-expr",
        "column": 38,
        "message": "If condition is always true",
        "offset": 16,
        "target": "mypy.fastparse.ASTConverter.do_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 51,
        "target": "mypy.fastparse.ASTConverter.do_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"Any | list[Any]\")",
        "offset": 54,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"Any | list[Any]\")",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"Any | list[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"Any | list[Any]\")",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(int, Any)\")",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(int, Any)\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"enumerate[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"Any | list[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"Any | list[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"Any | list[Any]\")",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(int, (Any, expr))\")",
        "offset": 3,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(int, (Any, expr))\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(Any, expr)\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(Any, expr)\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"enumerate[(Any, expr)]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"zip[(Any, expr)]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"Any | list[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"Any | list[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"Any | list[Any]\")",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 10,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "redundant-expr",
        "column": 29,
        "message": "If condition is always false",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.transform_args"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 28,
        "target": "mypy.fastparse.ASTConverter.make_argument"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"list[(str, Any)]\")",
        "offset": 12,
        "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 7,
        "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"list[(str, Any)]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"list[(str, Any)]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"list[(str, Any)]\")",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 16,
        "target": "mypy.fastparse.ASTConverter.visit_Return"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 10,
        "target": "mypy.fastparse.ASTConverter.visit_Delete"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.fastparse.ASTConverter.visit_Assign"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_Assign"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 15,
        "target": "mypy.fastparse.ASTConverter.visit_AnnAssign"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.fastparse.ASTConverter.visit_AugAssign"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_AugAssign"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.fastparse.ASTConverter.visit_For"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_For"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 9,
        "target": "mypy.fastparse.ASTConverter.visit_AsyncFor"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_AsyncFor"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 9,
        "target": "mypy.fastparse.ASTConverter.visit_While"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.fastparse.ASTConverter.visit_If"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.fastparse.ASTConverter.visit_With"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_With"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.fastparse.ASTConverter.visit_AsyncWith"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_AsyncWith"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.fastparse.ASTConverter.visit_Raise"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Raise"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 8,
        "target": "mypy.fastparse.ASTConverter.visit_Try"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Try"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 5,
        "target": "mypy.fastparse.ASTConverter.visit_Try"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.fastparse.ASTConverter.visit_Assert"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Assert"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 44,
        "target": "mypy.fastparse.ASTConverter.visit_Expr"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Expr"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 21,
        "target": "mypy.fastparse.ASTConverter.visit_NamedExpr"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_NamedExpr"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_NamedExpr"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_NamedExpr"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[And]\")",
        "offset": 8,
        "target": "mypy.fastparse.ASTConverter.visit_BoolOp"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[Or]\")",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_BoolOp"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 22,
        "target": "mypy.fastparse.ASTConverter.visit_BinOp"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_BinOp"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"type[Invert]\")",
        "offset": 6,
        "target": "mypy.fastparse.ASTConverter.visit_UnaryOp"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[Not]\")",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_UnaryOp"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[UAdd]\")",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_UnaryOp"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[USub]\")",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_UnaryOp"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.fastparse.ASTConverter.visit_UnaryOp"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 16,
        "target": "mypy.fastparse.ASTConverter.visit_IfExp"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_IfExp"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_IfExp"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 26,
        "target": "mypy.fastparse.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.fastparse.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 7,
        "target": "mypy.fastparse.ASTConverter.visit_GeneratorExp"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_GeneratorExp"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_GeneratorExp"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_GeneratorExp"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.fastparse.ASTConverter.visit_GeneratorExp"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_GeneratorExp"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_GeneratorExp"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.fastparse.ASTConverter.visit_Await"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Await"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.fastparse.ASTConverter.visit_Yield"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.fastparse.ASTConverter.visit_YieldFrom"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"type[Starred]\")",
        "offset": 17,
        "target": "mypy.fastparse.ASTConverter.visit_Call"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"type[Starred]\")",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_Call"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_Call"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 3,
        "target": "mypy.fastparse.ASTConverter.visit_Call"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 4,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 69,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 3,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 69,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 69,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 69,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 74,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 74,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 74,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 74,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 74,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 74,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 74,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 74,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 55,
        "target": "mypy.fastparse.ASTConverter.visit_FormattedValue"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_FormattedValue"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.fastparse.ASTConverter.visit_FormattedValue"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_FormattedValue"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.fastparse.ASTConverter.visit_FormattedValue"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_FormattedValue"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 12,
        "target": "mypy.fastparse.ASTConverter.visit_NameConstant"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_NameConstant"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 11,
        "target": "mypy.fastparse.ASTConverter.visit_Attribute"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 12,
        "target": "mypy.fastparse.ASTConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"type[Slice]\")",
        "offset": 5,
        "target": "mypy.fastparse.ASTConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"type[Slice]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression type contains \"Any\" (has type \"type[ExtSlice]\")",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 12,
        "target": "mypy.fastparse.ASTConverter.visit_Starred"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 10,
        "target": "mypy.fastparse.ASTConverter.visit_List"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[Store]\")",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_List"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 16,
        "target": "mypy.fastparse.ASTConverter.visit_Slice"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Slice"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Slice"
      },
      {
        "code": "no-any-explicit",
        "column": 50,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 5,
        "target": "mypy.fastparse.ASTConverter.visit_ExtSlice"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_ExtSlice"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_ExtSlice"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_ExtSlice"
      },
      {
        "code": "no-any-return",
        "column": 8,
        "message": "Returning Any from function declared to return \"Node\"",
        "offset": 5,
        "target": "mypy.fastparse.ASTConverter.visit_Index"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Index"
      },
      {
        "code": "no-any-explicit",
        "column": 26,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Index"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Index"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Index"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Index"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 76,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_Match"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.fastparse.ASTConverter.visit_MatchValue"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchValue"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.fastparse.ASTConverter.visit_MatchSingleton"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.fastparse.ASTConverter.visit_MatchSequence"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchSequence"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchSequence"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchSequence"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchSequence"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_MatchSequence"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchSequence"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchSequence"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 3,
        "target": "mypy.fastparse.ASTConverter.visit_MatchSequence"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.fastparse.ASTConverter.visit_MatchStar"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.fastparse.ASTConverter.visit_MatchStar"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.fastparse.ASTConverter.visit_MatchMapping"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchMapping"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchMapping"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchMapping"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchMapping"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_MatchMapping"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchMapping"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchMapping"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchMapping"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchMapping"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_MatchMapping"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.fastparse.ASTConverter.visit_MatchMapping"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_MatchMapping"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchMapping"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 66,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchClass"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.fastparse.ASTConverter.visit_MatchAs"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.fastparse.ASTConverter.visit_MatchAs"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse.ASTConverter.visit_MatchAs"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchAs"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.fastparse.ASTConverter.visit_MatchOr"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchOr"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchOr"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.ASTConverter.visit_MatchOr"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"Any | int\")",
        "offset": 44,
        "target": "mypy.fastparse.TypeConverter.invalid_type"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 17,
        "target": "mypy.fastparse.TypeConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.fastparse.TypeConverter.visit"
      },
      {
        "code": "no-any-return",
        "column": 16,
        "message": "Returning Any from function declared to return \"ProperType | None\"",
        "offset": 1,
        "target": "mypy.fastparse.TypeConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"type[typed_ast.ast3.List]\")",
        "offset": 39,
        "target": "mypy.fastparse.TypeConverter.visit_Call"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"type[Str]\")",
        "offset": 45,
        "target": "mypy.fastparse.TypeConverter._extract_argument_name"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[NameConstant]\")",
        "offset": 2,
        "target": "mypy.fastparse.TypeConverter._extract_argument_name"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[NameConstant]\")",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter._extract_argument_name"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter._extract_argument_name"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter._extract_argument_name"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"type[BitOr]\")",
        "offset": 10,
        "target": "mypy.fastparse.TypeConverter.visit_BinOp"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 12,
        "target": "mypy.fastparse.TypeConverter.visit_NameConstant"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.fastparse.TypeConverter.visit_NameConstant"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_NameConstant"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 77,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 73,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 83,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse.TypeConverter.visit_Constant"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression type contains \"Any\" (has type \"type[USub]\")",
        "offset": 9,
        "target": "mypy.fastparse.TypeConverter.visit_UnaryOp"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"Any | int\")",
        "offset": 24,
        "target": "mypy.fastparse.TypeConverter.numeric_type"
      },
      {
        "code": "no-any-explicit",
        "column": 26,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 39,
        "target": "mypy.fastparse.TypeConverter.visit_Index"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Index"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Index"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Index"
      },
      {
        "code": "no-any-explicit",
        "column": 26,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Index"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Index"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Index"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Index"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[Index]\")",
        "offset": 13,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-explicit",
        "column": 12,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[Slice]\")",
        "offset": 1,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 2,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"type[ExtSlice]\")",
        "offset": 2,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 3,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"type[Index]\")",
        "offset": 1,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[attr-defined]\" instead)",
        "offset": 1,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"type[Slice]\")",
        "offset": 1,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[attr-defined, union-attr]\" instead)",
        "offset": 1,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"type[typed_ast.ast3.Tuple]\")",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse.TypeConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[Load]\")",
        "offset": 28,
        "target": "mypy.fastparse.TypeConverter.visit_List"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"type[Name]\")",
        "offset": 5,
        "target": "mypy.fastparse.stringify_name"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"type[Attribute]\")",
        "offset": 2,
        "target": "mypy.fastparse.stringify_name"
      }
    ],
    "mypy/fastparse2.py": [
      {
        "code": "attr-defined",
        "column": 4,
        "message": "Module \"mypy.fastparse\" does not explicitly export attribute \"ast3\"; implicit reexport disabled",
        "offset": 67,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 51,
        "target": "mypy.fastparse2.parse"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.fastparse2.parse"
      },
      {
        "code": "no-any-return",
        "column": 4,
        "message": "Returning Any from function declared to return \"MypyFile\"",
        "offset": 11,
        "target": "mypy.fastparse2.parse"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse2.parse"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"type[Name]\")",
        "offset": 4,
        "target": "mypy.fastparse2.is_no_type_check_decorator"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"type[Attribute]\")",
        "offset": 2,
        "target": "mypy.fastparse2.is_no_type_check_decorator"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"type[Name]\")",
        "offset": 1,
        "target": "mypy.fastparse2.is_no_type_check_decorator"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 36,
        "target": "mypy.fastparse2.ASTConverter.__init__"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 8,
        "target": "mypy.fastparse2.ASTConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"dict[type, (AST | None) -> Any]\")",
        "offset": 4,
        "target": "mypy.fastparse2.ASTConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"(AST | None) -> Any | None\")",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"(AST | None) -> Any | None\")",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"dict[type, (AST | None) -> Any]\")",
        "offset": 3,
        "target": "mypy.fastparse2.ASTConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"(AST | None) -> Any | Any\")",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 10,
        "target": "mypy.fastparse2.ASTConverter.translate_expr_list"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.translate_expr_list"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"(type[ClassDef], type[FunctionDef])\")",
        "offset": 5,
        "target": "mypy.fastparse2.ASTConverter.get_lineno"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"(type[ClassDef], type[FunctionDef])\")",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.get_lineno"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[ClassDef]\")",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.get_lineno"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[ClassDef]\")",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.get_lineno"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"type[FunctionDef]\")",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.get_lineno"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"type[FunctionDef]\")",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.get_lineno"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 19,
        "target": "mypy.fastparse2.ASTConverter.translate_stmt_list"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.translate_stmt_list"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Add]\")",
        "offset": 20,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Add], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Sub]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Sub], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Mult]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Mult], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Div]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Div], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Mod]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Mod], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Pow]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Pow], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[LShift]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[LShift], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[RShift]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[RShift], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[BitOr]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[BitOr], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[BitXor]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[BitXor], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[BitAnd]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[BitAnd], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[FloorDiv]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[FloorDiv], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Gt]\")",
        "offset": 13,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Gt], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Lt]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Lt], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Eq]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Eq], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[GtE]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[GtE], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[LtE]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[LtE], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[NotEq]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[NotEq], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[Is]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[Is], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[IsNot]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[IsNot], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[In]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[In], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[NotIn]\")",
        "offset": 1,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[NotIn], str)\")",
        "offset": 0,
        "target": "mypy.fastparse2"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 109,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 2,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "redundant-expr",
        "column": 38,
        "message": "If condition is always true",
        "offset": 9,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 45,
        "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[Name]\")",
        "offset": 87,
        "target": "mypy.fastparse2.ASTConverter.extract_names"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[typed_ast.ast27.Tuple]\")",
        "offset": 2,
        "target": "mypy.fastparse2.ASTConverter.extract_names"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[Name]\")",
        "offset": 7,
        "target": "mypy.fastparse2.ASTConverter.convert_arg"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[typed_ast.ast27.Tuple]\")",
        "offset": 2,
        "target": "mypy.fastparse2.ASTConverter.convert_arg"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.fastparse2.ASTConverter.convert_arg"
      },
      {
        "code": "no-any-explicit",
        "column": 41,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 17,
        "target": "mypy.fastparse2.ASTConverter.get_type"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.get_type"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.get_type"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"type[Name]\")",
        "offset": 10,
        "target": "mypy.fastparse2.ASTConverter.stringify_name"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[Attribute]\")",
        "offset": 2,
        "target": "mypy.fastparse2.ASTConverter.stringify_name"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 28,
        "target": "mypy.fastparse2.ASTConverter.visit_Return"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 10,
        "target": "mypy.fastparse2.ASTConverter.visit_Delete"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.fastparse2.ASTConverter.visit_Assign"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.fastparse2.ASTConverter.visit_AugAssign"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_AugAssign"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.fastparse2.ASTConverter.visit_For"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_For"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.fastparse2.ASTConverter.visit_While"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.fastparse2.ASTConverter.visit_If"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.fastparse2.ASTConverter.visit_With"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_With"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 12,
        "target": "mypy.fastparse2.ASTConverter.visit_Raise"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.fastparse2.ASTConverter.visit_Raise"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_Raise"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse2.ASTConverter.visit_Raise"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_Raise"
      },
      {
        "code": "no-any-expr",
        "column": 75,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_Raise"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 2,
        "target": "mypy.fastparse2.ASTConverter.visit_Raise"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"type[TryExcept]\")",
        "offset": 10,
        "target": "mypy.fastparse2.ASTConverter.visit_TryFinally"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"type[Name]\")",
        "offset": 16,
        "target": "mypy.fastparse2.ASTConverter.try_handler"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 6,
        "target": "mypy.fastparse2.ASTConverter.try_handler"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.try_handler"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 5,
        "target": "mypy.fastparse2.ASTConverter.try_handler"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.fastparse2.ASTConverter.visit_Print"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.fastparse2.ASTConverter.visit_Exec"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_Exec"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_Exec"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.fastparse2.ASTConverter.visit_Repr"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.fastparse2.ASTConverter.visit_Assert"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_Assert"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 42,
        "target": "mypy.fastparse2.ASTConverter.visit_Expr"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_Expr"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"type[And]\")",
        "offset": 24,
        "target": "mypy.fastparse2.ASTConverter.visit_BoolOp"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[Or]\")",
        "offset": 2,
        "target": "mypy.fastparse2.ASTConverter.visit_BoolOp"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 22,
        "target": "mypy.fastparse2.ASTConverter.visit_BinOp"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_BinOp"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"type[Invert]\")",
        "offset": 6,
        "target": "mypy.fastparse2.ASTConverter.visit_UnaryOp"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[Not]\")",
        "offset": 2,
        "target": "mypy.fastparse2.ASTConverter.visit_UnaryOp"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[UAdd]\")",
        "offset": 2,
        "target": "mypy.fastparse2.ASTConverter.visit_UnaryOp"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[USub]\")",
        "offset": 2,
        "target": "mypy.fastparse2.ASTConverter.visit_UnaryOp"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.fastparse2.ASTConverter.visit_UnaryOp"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 20,
        "target": "mypy.fastparse2.ASTConverter.visit_IfExp"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_IfExp"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_IfExp"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 26,
        "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 7,
        "target": "mypy.fastparse2.ASTConverter.visit_GeneratorExp"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_GeneratorExp"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_GeneratorExp"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_GeneratorExp"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fastparse2.ASTConverter.visit_GeneratorExp"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_GeneratorExp"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_GeneratorExp"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.fastparse2.ASTConverter.visit_Yield"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 37,
        "target": "mypy.fastparse2.ASTConverter.visit_Call"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 60,
        "target": "mypy.fastparse2.ASTConverter.visit_Attribute"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 12,
        "target": "mypy.fastparse2.ASTConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_Subscript"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 15,
        "target": "mypy.fastparse2.ASTConverter.visit_List"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[Store]\")",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_List"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 9,
        "target": "mypy.fastparse2.ASTConverter.visit_Tuple"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.fastparse2.ASTConverter.visit_Slice"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_Slice"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fastparse2.ASTConverter.visit_Slice"
      },
      {
        "code": "no-any-return",
        "column": 8,
        "message": "Returning Any from function declared to return \"Expression\"",
        "offset": 8,
        "target": "mypy.fastparse2.ASTConverter.visit_Index"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fastparse2.ASTConverter.visit_Index"
      }
    ],
    "mypy/find_sources.py": [
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> _T) -> _lru_cache_wrapper[_T]\")",
        "offset": 163,
        "target": "mypy.find_sources"
      }
    ],
    "mypy/fixup.py": [
      {
        "code": "truthy-bool",
        "column": 15,
        "message": "Member \"defn\" has type \"ClassDef\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 43,
        "target": "mypy.fixup.NodeFixer.visit_type_info"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"func\" has type \"FuncDef\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 74,
        "target": "mypy.fixup.NodeFixer.visit_decorator"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"var\" has type \"Var\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 2,
        "target": "mypy.fixup.NodeFixer.visit_decorator"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 60,
        "target": "mypy.fixup.TypeFixer.visit_any"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"fallback\" has type \"Instance\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 4,
        "target": "mypy.fixup.TypeFixer.visit_callable_type"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 20,
        "target": "mypy.fixup.TypeFixer.visit_erased_type"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.fixup.TypeFixer.visit_erased_type"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 2,
        "target": "mypy.fixup.TypeFixer.visit_deleted_type"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypy.fixup.TypeFixer.visit_none_type"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypy.fixup.TypeFixer.visit_uninhabited_type"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypy.fixup.TypeFixer.visit_partial_type"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fixup.TypeFixer.visit_partial_type"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 57,
        "target": "mypy.fixup.TypeFixer.visit_void"
      }
    ],
    "mypy/fscache.py": [
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 300,
        "target": "mypy.fscache.copy_os_error"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.fscache.copy_os_error"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.fscache.copy_os_error"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fscache.copy_os_error"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fscache.copy_os_error"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.fscache.copy_os_error"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.fscache.copy_os_error"
      }
    ],
    "mypy/join.py": [
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 312,
        "target": "mypy.join.TypeJoinVisitor.visit_callable_type"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.join.TypeJoinVisitor.visit_callable_type"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"(type[CallableType], type[TypedDictType], type[LiteralType])\")",
        "offset": 273,
        "target": "mypy.join.object_or_any_from_type"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.join.object_or_any_from_type"
      }
    ],
    "mypy/literals.py": [
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 86,
        "target": "mypy.literals"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 46,
        "target": "mypy.literals._Hasher.visit_comparison_expr"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.literals._Hasher.visit_comparison_expr"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.literals._Hasher.visit_comparison_expr"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.literals._Hasher.visit_comparison_expr"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.literals._Hasher.visit_comparison_expr"
      },
      {
        "code": "no-any-return",
        "column": 8,
        "message": "Returning Any from function declared to return \"tuple[Any, ...]\"",
        "offset": 1,
        "target": "mypy.literals._Hasher.visit_comparison_expr"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.literals._Hasher.visit_comparison_expr"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.literals._Hasher.visit_comparison_expr"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.literals._Hasher.visit_comparison_expr"
      },
      {
        "code": "no-any-explicit",
        "column": 12,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 7,
        "target": "mypy.literals._Hasher.seq_expr"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.literals._Hasher.seq_expr"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")",
        "offset": 0,
        "target": "mypy.literals._Hasher.seq_expr"
      },
      {
        "code": "no-any-return",
        "column": 12,
        "message": "Returning Any from function declared to return \"tuple[Any, ...] | None\"",
        "offset": 1,
        "target": "mypy.literals._Hasher.seq_expr"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.literals._Hasher.seq_expr"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.literals._Hasher.seq_expr"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.literals._Hasher.seq_expr"
      },
      {
        "code": "no-any-explicit",
        "column": 12,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 8,
        "target": "mypy.literals._Hasher.visit_dict_expr"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.literals._Hasher.visit_dict_expr"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")",
        "offset": 0,
        "target": "mypy.literals._Hasher.visit_dict_expr"
      },
      {
        "code": "no-any-return",
        "column": 12,
        "message": "Returning Any from function declared to return \"tuple[Any, ...] | None\"",
        "offset": 3,
        "target": "mypy.literals._Hasher.visit_dict_expr"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.literals._Hasher.visit_dict_expr"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.literals._Hasher.visit_dict_expr"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.literals._Hasher.visit_dict_expr"
      }
    ],
    "mypy/main.py": [
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 308,
        "target": "mypy.main.infer_python_executable"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.infer_python_executable"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"Any | str | None\")",
        "offset": 0,
        "target": "mypy.main.infer_python_executable"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"Any | str | None\")",
        "offset": 2,
        "target": "mypy.main.infer_python_executable"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.infer_python_executable"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.infer_python_executable"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 49,
        "target": "mypy.main.CapturableArgumentParser.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.main.CapturableArgumentParser.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.CapturableArgumentParser.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.main.CapturableArgumentParser.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.CapturableArgumentParser.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 1,
        "target": "mypy.main.CapturableArgumentParser.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.main.CapturableArgumentParser.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.main.CapturableArgumentParser.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.main.CapturableArgumentParser.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.main.CapturableArgumentParser.print_usage"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"IO[str] | Any\")",
        "offset": 1,
        "target": "mypy.main.CapturableArgumentParser.print_usage"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.main.CapturableArgumentParser.print_help"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"IO[str] | Any\")",
        "offset": 1,
        "target": "mypy.main.CapturableArgumentParser.print_help"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.main.CapturableArgumentParser._print_message"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"IO[str] | Any\")",
        "offset": 1,
        "target": "mypy.main.CapturableArgumentParser._print_message"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.main.CapturableArgumentParser.exit"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 12,
        "target": "mypy.main.CapturableArgumentParser.error"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 33,
        "target": "mypy.main.CapturableVersionAction.__call__"
      },
      {
        "code": "no-any-expr",
        "column": 66,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 184,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 3,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 73,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 122,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 72,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 3,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 83,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 165,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 28,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 9,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 5,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 15,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 10,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 14,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 77,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 27,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 1,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 3,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 8,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 17,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 10,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 10,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 10,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 10,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 10,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.main.process_options"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 48,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"(Any, Any)\")",
        "offset": 0,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_cache_map"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.main.process_cache_map"
      }
    ],
    "mypy/meet.py": [
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 323,
        "target": "mypy.meet.is_overlapping_types"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.meet.is_overlapping_types"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 18,
        "target": "mypy.meet.is_overlapping_types"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.meet.is_overlapping_types"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.meet.is_overlapping_types"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 5,
        "target": "mypy.meet.is_overlapping_types"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 2,
        "target": "mypy.meet.is_overlapping_types"
      },
      {
        "code": "no-any-expr",
        "column": 64,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 209,
        "target": "mypy.meet.TypeMeetVisitor.visit_parameters"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 62,
        "target": "mypy.meet.TypeMeetVisitor.visit_callable_type"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.meet.TypeMeetVisitor.visit_callable_type"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 103,
        "target": "mypy.meet.TypeMeetVisitor.visit_type_type"
      }
    ],
    "mypy/memprofile.py": [
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 25,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 1,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 3,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[misc, no-any-expr]\" instead)",
        "offset": 1,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"dict_values[str, Any]\")",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 5,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 2,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 59,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 59,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 59,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 59,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.collect_memory_stats"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 18,
        "target": "mypy.memprofile.print_memory_profile"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.print_memory_profile"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.print_memory_profile"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"type[type]\")",
        "offset": 36,
        "target": "mypy.memprofile.find_recursive_objects"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.memprofile.find_recursive_objects"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"Any | ()\")",
        "offset": 0,
        "target": "mypy.memprofile.find_recursive_objects"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.memprofile.find_recursive_objects"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.memprofile.find_recursive_objects"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.find_recursive_objects"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.memprofile.find_recursive_objects"
      }
    ],
    "mypy/messages.py": [
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 262,
        "target": "mypy.messages.MessageBuilder.has_no_attr"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.has_no_attr"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 85,
        "target": "mypy.messages.MessageBuilder.unsupported_operand_types"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 12,
        "target": "mypy.messages.MessageBuilder.unsupported_operand_types"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.messages.MessageBuilder.unsupported_operand_types"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.messages.MessageBuilder.unsupported_operand_types"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.messages.MessageBuilder.unsupported_operand_types"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 255,
        "target": "mypy.messages.MessageBuilder.incompatible_argument_note"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.incompatible_argument_note"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 15,
        "target": "mypy.messages.MessageBuilder.maybe_note_concatenate_pos_args"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.maybe_note_concatenate_pos_args"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 1,
        "target": "mypy.messages.MessageBuilder.maybe_note_concatenate_pos_args"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.maybe_note_concatenate_pos_args"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 75,
        "target": "mypy.messages.MessageBuilder.maybe_note_about_special_args"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.maybe_note_about_special_args"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.messages.MessageBuilder.maybe_note_about_special_args"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.maybe_note_about_special_args"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | None | bool\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.maybe_note_about_special_args"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.maybe_note_about_special_args"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"(type[CallableType], type[Overloaded])\")",
        "offset": 162,
        "target": "mypy.messages.MessageBuilder.signature_incompatible_with_supertype"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"(type[CallableType], type[Overloaded])\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.signature_incompatible_with_supertype"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.signature_incompatible_with_supertype"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.signature_incompatible_with_supertype"
      },
      {
        "code": "no-any-expr",
        "column": 66,
        "message": "Expression type contains \"Any\" (has type \"(type[CallableType], type[Overloaded])\")",
        "offset": 1,
        "target": "mypy.messages.MessageBuilder.signature_incompatible_with_supertype"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.signature_incompatible_with_supertype"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 19,
        "target": "mypy.messages.MessageBuilder.pretty_callable_or_overload"
      },
      {
        "code": "no-any-expr",
        "column": 65,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 306,
        "target": "mypy.messages.MessageBuilder.reveal_locals"
      },
      {
        "code": "no-any-expr",
        "column": 65,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> str\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.reveal_locals"
      },
      {
        "code": "no-any-expr",
        "column": 75,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.reveal_locals"
      },
      {
        "code": "unreachable",
        "column": 16,
        "message": "Statement is unreachable",
        "offset": 287,
        "target": "mypy.messages.MessageBuilder.report_protocol_problems"
      },
      {
        "code": "unreachable",
        "column": 16,
        "message": "Statement is unreachable",
        "offset": 4,
        "target": "mypy.messages.MessageBuilder.report_protocol_problems"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"(type[CallableType], type[Overloaded])\")",
        "offset": 27,
        "target": "mypy.messages.MessageBuilder.report_protocol_problems"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"(type[CallableType], type[Overloaded])\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.report_protocol_problems"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.report_protocol_problems"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.report_protocol_problems"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"(type[CallableType], type[Overloaded])\")",
        "offset": 1,
        "target": "mypy.messages.MessageBuilder.report_protocol_problems"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.messages.MessageBuilder.report_protocol_problems"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 8,
        "target": "mypy.messages.MessageBuilder.report_protocol_problems"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 6,
        "target": "mypy.messages.MessageBuilder.report_protocol_problems"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 51,
        "target": "mypy.messages.MessageBuilder.print_more"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"Sequence[Any]\")",
        "offset": 7,
        "target": "mypy.messages.MessageBuilder.print_more"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"Sequence[Any]\")",
        "offset": 1,
        "target": "mypy.messages.MessageBuilder.print_more"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 272,
        "target": "mypy.messages.format_type_inner"
      },
      {
        "code": "redundant-expr",
        "column": 12,
        "message": "Left operand of \"and\" is always true",
        "offset": 179,
        "target": "mypy.messages.pretty_callable"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 10,
        "target": "mypy.messages.pretty_callable"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.messages.pretty_callable"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.messages.pretty_callable"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.messages.pretty_callable"
      },
      {
        "code": "redundant-expr",
        "column": 7,
        "message": "Left operand of \"and\" is always true",
        "offset": 159,
        "target": "mypy.messages.find_defining_module"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> (float, Any)\")",
        "offset": 20,
        "target": "mypy.messages.best_matches"
      }
    ],
    "mypy/metastore.py": [
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 177,
        "target": "mypy.metastore.SqliteMetadataStore._query"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 6,
        "target": "mypy.metastore.SqliteMetadataStore._query"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.metastore.SqliteMetadataStore._query"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.metastore.SqliteMetadataStore._query"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.metastore.SqliteMetadataStore._query"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.metastore.SqliteMetadataStore._query"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.metastore.SqliteMetadataStore._query"
      },
      {
        "code": "no-any-return",
        "column": 8,
        "message": "Returning Any from function declared to return \"float\"",
        "offset": 3,
        "target": "mypy.metastore.SqliteMetadataStore.getmtime"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.metastore.SqliteMetadataStore.getmtime"
      },
      {
        "code": "no-any-return",
        "column": 8,
        "message": "Returning Any from function declared to return \"str\"",
        "offset": 3,
        "target": "mypy.metastore.SqliteMetadataStore.read"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.metastore.SqliteMetadataStore.read"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 28,
        "target": "mypy.metastore.SqliteMetadataStore.list_all"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.metastore.SqliteMetadataStore.list_all"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.metastore.SqliteMetadataStore.list_all"
      }
    ],
    "mypy/modulefinder.py": [
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 573,
        "target": "mypy.modulefinder.FindModuleCache._is_compatible_stub_package"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.modulefinder.FindModuleCache._is_compatible_stub_package"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"Any | object\")",
        "offset": 0,
        "target": "mypy.modulefinder.FindModuleCache._is_compatible_stub_package"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.modulefinder.FindModuleCache._is_compatible_stub_package"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"Any | object\")",
        "offset": 0,
        "target": "mypy.modulefinder.FindModuleCache._is_compatible_stub_package"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"((...) -> _T) -> _lru_cache_wrapper[_T]\")",
        "offset": 148,
        "target": "mypy.modulefinder"
      }
    ],
    "mypy/moduleinspect.py": [
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 32,
        "target": "mypy.moduleinspect.is_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.moduleinspect.is_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"(Any, Any)\")",
        "offset": 4,
        "target": "mypy.moduleinspect.is_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.moduleinspect.is_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.moduleinspect.is_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.moduleinspect.is_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.moduleinspect.is_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.moduleinspect.is_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | str\")",
        "offset": 13,
        "target": "mypy.moduleinspect.get_package_properties"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.moduleinspect.get_package_properties"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 4,
        "target": "mypy.moduleinspect.get_package_properties"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.moduleinspect.get_package_properties"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.moduleinspect.get_package_properties"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.moduleinspect.get_package_properties"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"Any | str\")",
        "offset": 22,
        "target": "mypy.moduleinspect.get_package_properties"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.moduleinspect.get_package_properties"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.moduleinspect.get_package_properties"
      }
    ],
    "mypy/nodes.py": [
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 76,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.nodes"
      },
      {
        "code": "unreachable",
        "column": 12,
        "message": "Statement is unreachable",
        "offset": 118,
        "target": "mypy.nodes.Node.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 162,
        "target": "mypy.nodes.MypyFile.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 6,
        "target": "mypy.nodes.MypyFile.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.nodes.MypyFile.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.nodes.MypyFile.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 223,
        "target": "mypy.nodes.OverloadedFuncDef.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypy.nodes.OverloadedFuncDef.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.nodes.OverloadedFuncDef.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 9,
        "target": "mypy.nodes.OverloadedFuncDef.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.nodes.OverloadedFuncDef.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.nodes.OverloadedFuncDef.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 116,
        "target": "mypy.nodes.FuncItem.is_dynamic"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.nodes.FuncItem.is_dynamic"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.nodes.FuncItem.is_dynamic"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.nodes.FuncItem.is_dynamic"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 50,
        "target": "mypy.nodes.FuncDef.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 4,
        "target": "mypy.nodes.FuncDef.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.nodes.FuncDef.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.nodes.FuncDef.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.nodes.FuncDef.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 12,
        "target": "mypy.nodes.FuncDef.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.nodes.FuncDef.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.nodes.FuncDef.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.nodes.FuncDef.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 62,
        "target": "mypy.nodes.Decorator.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.nodes.Decorator.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 123,
        "target": "mypy.nodes.Var.deserialize"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[assignment]\" instead)",
        "offset": 42,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 21,
        "target": "mypy.nodes.ClassDef.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 3,
        "target": "mypy.nodes.ClassDef.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.nodes.ClassDef.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.nodes.ClassDef.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.nodes.ClassDef.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 85,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.nodes.ClassDef.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1253,
        "target": "mypy.nodes.TypeVarExpr.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 3,
        "target": "mypy.nodes.TypeVarExpr.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.nodes.TypeVarExpr.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.nodes.TypeVarExpr.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.nodes.TypeVarExpr.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.nodes.TypeVarExpr.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 12,
        "target": "mypy.nodes.ParamSpecExpr.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 10,
        "target": "mypy.nodes.ParamSpecExpr.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 18,
        "target": "mypy.nodes.TypeVarTupleExpr.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 10,
        "target": "mypy.nodes.TypeVarTupleExpr.deserialize"
      },
      {
        "code": "unreachable",
        "column": 20,
        "message": "Statement is unreachable",
        "offset": 444,
        "target": "mypy.nodes.TypeInfo.get_method"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 128,
        "target": "mypy.nodes.TypeInfo.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.nodes.TypeInfo.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.nodes.TypeInfo.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.nodes.TypeInfo.deserialize"
      },
      {
        "code": "no-any-return",
        "column": 12,
        "message": "Returning Any from function declared to return \"None\"",
        "offset": 57,
        "target": "mypy.nodes.FakeInfo.__getattribute__"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.nodes.FakeInfo.__getattribute__"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.nodes.FakeInfo.__getattribute__"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 145,
        "target": "mypy.nodes.TypeAlias.deserialize"
      },
      {
        "code": "redundant-expr",
        "column": 20,
        "message": "Left operand of \"and\" is always true",
        "offset": 233,
        "target": "mypy.nodes.SymbolTableNode.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 14,
        "target": "mypy.nodes.SymbolTableNode.deserialize"
      },
      {
        "code": "unreachable",
        "column": 16,
        "message": "Statement is unreachable",
        "offset": 39,
        "target": "mypy.nodes.SymbolTable.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 24,
        "target": "mypy.nodes.SymbolTable.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 9,
        "target": "mypy.nodes.get_flags"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 24,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
        "offset": 0,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 1,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 0,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"type[type]\")",
        "offset": 0,
        "target": "mypy.nodes"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"type[type]\")",
        "offset": 0,
        "target": "mypy.nodes"
      }
    ],
    "mypy/options.py": [
      {
        "code": "attr-defined",
        "column": 4,
        "message": "Module \"mypy.errors\" does not explicitly export attribute \"ErrorCode\"; implicit reexport disabled",
        "offset": 13,
        "target": "mypy.options"
      },
      {
        "code": "no-any-unimported",
        "column": 8,
        "message": "Type of variable becomes \"set[Any (from unimported type)]\" due to an unfollowed import",
        "offset": 217,
        "target": "mypy.options.Options.__init__"
      },
      {
        "code": "no-any-unimported",
        "column": 8,
        "message": "Type of variable becomes \"set[Any (from unimported type)]\" due to an unfollowed import",
        "offset": 4,
        "target": "mypy.options.Options.__init__"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 94,
        "target": "mypy.options.Options.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"Any | ()\")",
        "offset": 30,
        "target": "mypy.options.Options.snapshot"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.options.Options.snapshot"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.options.Options.snapshot"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "\"get\" returns \"object\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 12,
        "target": "mypy.options.Options.apply_changes"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 108,
        "target": "mypy.options.Options.select_options_affecting_cache"
      }
    ],
    "mypy/parse.py": [
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"(Any) -> Any | None\")",
        "offset": 21,
        "target": "mypy.parse.parse"
      }
    ],
    "mypy/plugin.py": [
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 355,
        "target": "mypy.plugin.SemanticAnalyzerPluginInterface.add_symbol_table_node"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(SemanticAnalyzerPluginInterface, str, SymbolTableNode) -> Any\")",
        "offset": 0,
        "target": "mypy.plugin"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 153,
        "target": "mypy.plugin.Plugin.report_config_data"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 292,
        "target": "mypy.plugin.ChainedPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.plugin.ChainedPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.plugin.ChainedPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.plugin.ChainedPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"list[Any] | None\")",
        "offset": 0,
        "target": "mypy.plugin.ChainedPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.plugin.ChainedPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.plugin.ChainedPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.plugin.ChainedPlugin.report_config_data"
      }
    ],
    "mypy/plugins/attrs.py": [
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 130,
        "target": "mypy.plugins.attrs.Attribute.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 104,
        "target": "mypy.plugins.attrs.attr_tag_callback"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 72,
        "target": "mypy.plugins.attrs.attr_class_maker_callback"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypy.plugins.attrs.attr_class_maker_callback"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.plugins.attrs.attr_class_maker_callback"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 72,
        "target": "mypy.plugins.attrs._analyze_class"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.plugins.attrs._analyze_class"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.plugins.attrs._analyze_class"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.plugins.attrs._analyze_class"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 33,
        "target": "mypy.plugins.attrs._add_empty_metadata"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypy.plugins.attrs._add_empty_metadata"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.plugins.attrs._add_empty_metadata"
      },
      {
        "code": "truthy-bool",
        "column": 16,
        "message": "Expression has type \"Expression\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 186,
        "target": "mypy.plugins.attrs._parse_converter"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 38,
        "target": "mypy.plugins.attrs._parse_converter"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.plugins.attrs._parse_converter"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 102,
        "target": "mypy.plugins.attrs._add_init"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 0,
        "target": "mypy.plugins.attrs._add_init"
      }
    ],
    "mypy/plugins/common.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.semanal\" does not explicitly export attribute \"set_callable_name\"; implicit reexport disabled",
        "offset": 8,
        "target": "mypy.plugins.common"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 58,
        "target": "mypy.plugins.common._get_argument"
      }
    ],
    "mypy/plugins/dataclasses.py": [
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 81,
        "target": "mypy.plugins.dataclasses.DataclassAttribute.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 162,
        "target": "mypy.plugins.dataclasses.DataclassTransformer.transform"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypy.plugins.dataclasses.DataclassTransformer.transform"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.plugins.dataclasses.DataclassTransformer.transform"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 184,
        "target": "mypy.plugins.dataclasses.DataclassTransformer.collect_attributes"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.plugins.dataclasses.DataclassTransformer.collect_attributes"
      },
      {
        "code": "no-any-expr",
        "column": 64,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.plugins.dataclasses.DataclassTransformer.collect_attributes"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 19,
        "target": "mypy.plugins.dataclasses.DataclassTransformer.collect_attributes"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.plugins.dataclasses.DataclassTransformer.collect_attributes"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 63,
        "target": "mypy.plugins.dataclasses.DataclassTransformer._propertize_callables"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 42,
        "target": "mypy.plugins.dataclasses.dataclass_tag_callback"
      }
    ],
    "mypy/plugins/default.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.plugins.common\" does not explicitly export attribute \"try_getting_str_literals\"; implicit reexport disabled",
        "offset": 9,
        "target": "mypy.plugins.default"
      },
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.checkexpr\" does not explicitly export attribute \"is_literal_type_like\"; implicit reexport disabled",
        "offset": 7,
        "target": "mypy.plugins.default"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 136,
        "target": "mypy.plugins.default.contextmanager_callback"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.plugins.default.contextmanager_callback"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 1,
        "target": "mypy.plugins.default.contextmanager_callback"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 53,
        "target": "mypy.plugins.default.typed_dict_get_callback"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.plugins.default.typed_dict_get_callback"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 4,
        "target": "mypy.plugins.default.typed_dict_get_callback"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.plugins.default.typed_dict_get_callback"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.plugins.default.typed_dict_get_callback"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.plugins.default.typed_dict_get_callback"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 59,
        "target": "mypy.plugins.default.typed_dict_pop_callback"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.plugins.default.typed_dict_pop_callback"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 5,
        "target": "mypy.plugins.default.typed_dict_pop_callback"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.plugins.default.typed_dict_pop_callback"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.plugins.default.typed_dict_pop_callback"
      },
      {
        "code": "no-any-expr",
        "column": 70,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.plugins.default.typed_dict_pop_callback"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 2,
        "target": "mypy.plugins.default.typed_dict_pop_callback"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.plugins.default.typed_dict_pop_callback"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 4,
        "target": "mypy.plugins.default.typed_dict_pop_callback"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 38,
        "target": "mypy.plugins.default.typed_dict_setdefault_callback"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.plugins.default.typed_dict_setdefault_callback"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 7,
        "target": "mypy.plugins.default.typed_dict_setdefault_callback"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.plugins.default.typed_dict_setdefault_callback"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.plugins.default.typed_dict_setdefault_callback"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.plugins.default.typed_dict_setdefault_callback"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 3,
        "target": "mypy.plugins.default.typed_dict_setdefault_callback"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 23,
        "target": "mypy.plugins.default.typed_dict_delitem_callback"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.plugins.default.typed_dict_delitem_callback"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 4,
        "target": "mypy.plugins.default.typed_dict_delitem_callback"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.plugins.default.typed_dict_delitem_callback"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.plugins.default.typed_dict_delitem_callback"
      },
      {
        "code": "no-any-expr",
        "column": 70,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.plugins.default.typed_dict_delitem_callback"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.plugins.default.typed_dict_delitem_callback"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.plugins.default.typed_dict_delitem_callback"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 48,
        "target": "mypy.plugins.default.int_neg_callback"
      },
      {
        "code": "unreachable",
        "column": 20,
        "message": "Subclass of \"TupleType\" and \"LiteralType\" cannot exist: would have incompatible method signatures",
        "offset": 30,
        "target": "mypy.plugins.default.tuple_mul_callback"
      },
      {
        "code": "unreachable",
        "column": 8,
        "message": "Statement is unreachable",
        "offset": 1,
        "target": "mypy.plugins.default.tuple_mul_callback"
      }
    ],
    "mypy/plugins/enums.py": [
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 97,
        "target": "mypy.plugins.enums._infer_value_type_with_auto_fallback"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 74,
        "target": "mypy.plugins.enums.enum_value_callback"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.plugins.enums.enum_value_callback"
      }
    ],
    "mypy/plugins/functools.py": [
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> (bool, Any)\")",
        "offset": 43,
        "target": "mypy.plugins.functools.functools_total_ordering_maker_callback"
      },
      {
        "code": "unreachable",
        "column": 50,
        "message": "Right operand of \"and\" is never evaluated",
        "offset": 55,
        "target": "mypy.plugins.functools._analyze_class"
      },
      {
        "code": "unreachable",
        "column": 20,
        "message": "Statement is unreachable",
        "offset": 1,
        "target": "mypy.plugins.functools._analyze_class"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 5,
        "target": "mypy.plugins.functools._analyze_class"
      }
    ],
    "mypy/plugins/singledispatch.py": [
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[arg-type]\" instead)",
        "offset": 35,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 57,
        "target": "mypy.plugins.singledispatch.create_singledispatch_function_callback"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"(type[CallableType], type[Overloaded])\")",
        "offset": 32,
        "target": "mypy.plugins.singledispatch.singledispatch_register_callback"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"(type[CallableType], type[Overloaded])\")",
        "offset": 0,
        "target": "mypy.plugins.singledispatch.singledispatch_register_callback"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.plugins.singledispatch.singledispatch_register_callback"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.plugins.singledispatch.singledispatch_register_callback"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 16,
        "target": "mypy.plugins.singledispatch.singledispatch_register_callback"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 18,
        "target": "mypy.plugins.singledispatch.register_function"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[arg-type]\" instead)",
        "offset": 36,
        "target": null
      }
    ],
    "mypy/pyinfo.py": [
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | str\")",
        "offset": 33,
        "target": "mypy.pyinfo.getsearchdirs"
      }
    ],
    "mypy/report.py": [
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[import]\" instead)",
        "offset": 28,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 237,
        "target": "mypy.report.AnyExpressionsReporter._report_any_exprs"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.report.AnyExpressionsReporter._report_any_exprs"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 15,
        "target": "mypy.report.AnyExpressionsReporter._report_types_of_anys"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.report.AnyExpressionsReporter._report_types_of_anys"
      },
      {
        "code": "redundant-expr",
        "column": 17,
        "message": "Left operand of \"and\" is always true",
        "offset": 78,
        "target": "mypy.report.LineCoverageVisitor.visit_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"dict[Any, Any]\")",
        "offset": 56,
        "target": "mypy.report.LineCoverageReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 32,
        "target": "mypy.report.MemoryXmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.__init__"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.report.MemoryXmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 30,
        "target": "mypy.report.MemoryXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.MemoryXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 6,
        "target": "mypy.report.MemoryXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 7,
        "target": "mypy.report.MemoryXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 2,
        "target": "mypy.report.MemoryXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.MemoryXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 2,
        "target": "mypy.report.MemoryXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 19,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 2,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 3,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 6,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 2,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 2,
        "target": "mypy.report.MemoryXmlReporter.on_finish"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 18,
        "target": "mypy.report.CoberturaPackage.__init__"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 5,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 3,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.CoberturaPackage.as_xml"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 2,
        "target": "mypy.report.CoberturaPackage.add_packages"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 2,
        "target": "mypy.report.CoberturaPackage.add_packages"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaPackage.add_packages"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.report.CoberturaPackage.add_packages"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression type contains \"Any\" (has type \"attrgetter[Any]\")",
        "offset": 1,
        "target": "mypy.report.CoberturaPackage.add_packages"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression type contains \"Any\" (has type \"attrgetter[Any]\")",
        "offset": 0,
        "target": "mypy.report.CoberturaPackage.add_packages"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression type contains \"Any\" (has type \"attrgetter[Any]\")",
        "offset": 0,
        "target": "mypy.report.CoberturaPackage.add_packages"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.CoberturaPackage.add_packages"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.report.CoberturaPackage.add_packages"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 9,
        "target": "mypy.report.CoberturaXmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 3,
        "target": "mypy.report.CoberturaXmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 18,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 4,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 18,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 6,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 16,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 3,
        "target": "mypy.report.CoberturaXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 2,
        "target": "mypy.report.CoberturaXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.CoberturaXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.CoberturaXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.CoberturaXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.CoberturaXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.CoberturaXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 2,
        "target": "mypy.report.CoberturaXmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 33,
        "target": "mypy.report.XmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.report.XmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.report.XmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 3,
        "target": "mypy.report.XmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.report.XmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.report.XmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 19,
        "target": "mypy.report.XsltHtmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.XsltHtmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.XsltHtmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.XsltHtmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.report.XsltHtmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.XsltHtmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.XsltHtmlReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 7,
        "target": "mypy.report.XsltHtmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.report.XsltHtmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 7,
        "target": "mypy.report.XsltHtmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.XsltHtmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.report.XsltHtmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.report.XsltHtmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.XsltHtmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.XsltHtmlReporter.on_file"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 5,
        "target": "mypy.report.XsltHtmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.report.XsltHtmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 3,
        "target": "mypy.report.XsltHtmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.XsltHtmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.report.XsltHtmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.report.XsltHtmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.XsltHtmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.XsltHtmlReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 19,
        "target": "mypy.report.XsltTxtReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.XsltTxtReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.XsltTxtReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.XsltTxtReporter.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 10,
        "target": "mypy.report.XsltTxtReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.report.XsltTxtReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 2,
        "target": "mypy.report.XsltTxtReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.report.XsltTxtReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.report.XsltTxtReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.report.XsltTxtReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 63,
        "target": "mypy.report.LinePrecisionReporter.on_finish"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.report.LinePrecisionReporter.on_finish"
      }
    ],
    "mypy/sametypes.py": [
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 138,
        "target": "mypy.sametypes.SameTypeVisitor.visit_callable_type"
      }
    ],
    "mypy/scope.py": [
      {
        "code": "truthy-bool",
        "column": 19,
        "message": "Member \"function\" has type \"FuncBase\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 78,
        "target": "mypy.scope.Scope.function_scope"
      }
    ],
    "mypy/semanal.py": [
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 646,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 10,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 13,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 19,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 15,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 6,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 24,
        "target": "mypy.semanal.SemanticAnalyzer.prepare_method_signature"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 74,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_overloaded_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 57,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_overload_sigs_and_impl"
      },
      {
        "code": "no-any-expr",
        "column": 64,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 148,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_property_with_multi_part_definition"
      },
      {
        "code": "no-any-expr",
        "column": 64,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 5,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_property_with_multi_part_definition"
      },
      {
        "code": "no-any-expr",
        "column": 64,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 14,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_property_with_multi_part_definition"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 67,
        "target": "mypy.semanal.SemanticAnalyzer.check_classvar_in_signature"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 10,
        "target": "mypy.semanal.SemanticAnalyzer.check_function_signature"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 332,
        "target": "mypy.semanal.SemanticAnalyzer.clean_up_bases_and_infer_type_variables"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 603,
        "target": "mypy.semanal.SemanticAnalyzer.report_missing_module_attribute"
      },
      {
        "code": "unreachable",
        "column": 20,
        "message": "Statement is unreachable",
        "offset": 66,
        "target": "mypy.semanal.SemanticAnalyzer.visit_import_all"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"rvalue\" has type \"Expression\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 329,
        "target": "mypy.semanal.SemanticAnalyzer.analyze_lvalues"
      },
      {
        "code": "truthy-bool",
        "column": 15,
        "message": "\"call\" has type \"CallExpr\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 938,
        "target": "mypy.semanal.SemanticAnalyzer.extract_typevarlike_name"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"zip[tuple[Any, ...]]\")",
        "offset": 211,
        "target": "mypy.semanal.SemanticAnalyzer.process_module_assignment"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 1,
        "target": "mypy.semanal.SemanticAnalyzer.process_module_assignment"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer.process_module_assignment"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer.process_module_assignment"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"zip[tuple[Any, ...]]\")",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer.process_module_assignment"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.semanal.SemanticAnalyzer.process_module_assignment"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer.process_module_assignment"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"expr\" has type \"Expression\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 150,
        "target": "mypy.semanal.SemanticAnalyzer.visit_assert_stmt"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"expr\" has type \"Expression\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 269,
        "target": "mypy.semanal.SemanticAnalyzer.visit_yield_from_expr"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 58,
        "target": "mypy.semanal.SemanticAnalyzer.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 72,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 123,
        "target": "mypy.semanal.SemanticAnalyzer.visit_member_expr"
      },
      {
        "code": "truthy-bool",
        "column": 27,
        "message": "\"n\" has type \"SymbolTableNode\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 12,
        "target": "mypy.semanal.SemanticAnalyzer.visit_member_expr"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 562,
        "target": "mypy.semanal.SemanticAnalyzer.create_getattr_var"
      },
      {
        "code": "truthy-bool",
        "column": 15,
        "message": "\"sym\" has type \"SymbolTableNode\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 46,
        "target": "mypy.semanal.SemanticAnalyzer.named_type"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[misc]\" instead)",
        "offset": 15,
        "target": null
      },
      {
        "code": "no-any-explicit",
        "column": 12,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 201,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 7,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"Literal[True] | Any\")",
        "offset": 2,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal.SemanticAnalyzer._get_node_for_class_scoped_import"
      },
      {
        "code": "redundant-expr",
        "column": 16,
        "message": "Left operand of \"and\" is always true",
        "offset": 355,
        "target": "mypy.semanal.SemanticAnalyzer.in_checked_function"
      },
      {
        "code": "truthy-bool",
        "column": 15,
        "message": "\"aliases_used\" has type \"Iterable[str]\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 174,
        "target": "mypy.semanal.SemanticAnalyzer.add_type_alias_deps"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 48,
        "target": "mypy.semanal.replace_implicit_first_type"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 77,
        "target": "mypy.semanal.apply_semantic_analyzer_patches"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal.apply_semantic_analyzer_patches"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 70,
        "target": "mypy.semanal.infer_fdef_types_from_defaults"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.semanal.infer_fdef_types_from_defaults"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 29,
        "target": "mypy.semanal.infer_fdef_types_from_defaults"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 2,
        "target": "mypy.semanal.infer_fdef_types_from_defaults"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.semanal.infer_fdef_types_from_defaults"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.semanal.infer_fdef_types_from_defaults"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.semanal.infer_fdef_types_from_defaults"
      }
    ],
    "mypy/semanal_infer.py": [
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 35,
        "target": "mypy.semanal_infer.infer_decorator_signature_if_simple"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 34,
        "target": "mypy.semanal_infer.is_identity_signature"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.semanal_infer.is_identity_signature"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 20,
        "target": "mypy.semanal_infer.calculate_return_type"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 21,
        "target": "mypy.semanal_infer.find_fixed_callable_return"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.semanal_infer.find_fixed_callable_return"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 2,
        "target": "mypy.semanal_infer.find_fixed_callable_return"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 6,
        "target": "mypy.semanal_infer.find_fixed_callable_return"
      }
    ],
    "mypy/semanal_main.py": [
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> (Any, Any)\")",
        "offset": 234,
        "target": "mypy.semanal_main.process_functions"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression type contains \"Any\" (has type \"(Any, Any)\")",
        "offset": 0,
        "target": "mypy.semanal_main.process_functions"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal_main.process_functions"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal_main.process_functions"
      },
      {
        "code": "no-any-expr",
        "column": 79,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.semanal_main.process_functions"
      }
    ],
    "mypy/semanal_namedtuple.py": [
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 418,
        "target": "mypy.semanal_namedtuple.NamedTupleAnalyzer.build_namedtuple_typeinfo"
      }
    ],
    "mypy/server/astdiff.py": [
      {
        "code": "unreachable",
        "column": 8,
        "message": "Statement is unreachable",
        "offset": 178,
        "target": "mypy.server.astdiff.snapshot_definition"
      }
    ],
    "mypy/server/astmerge.py": [
      {
        "code": "unreachable",
        "column": 12,
        "message": "Statement is unreachable",
        "offset": 241,
        "target": "mypy.server.astmerge.NodeReplaceVisitor.visit_call_expr"
      }
    ],
    "mypy/server/aststrip.py": [
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 140,
        "target": "mypy.server.aststrip.NodeStripVisitor.visit_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.server.aststrip.NodeStripVisitor.visit_func_def"
      }
    ],
    "mypy/server/deps.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.checkmember\" does not explicitly export attribute \"bind_self\"; implicit reexport disabled",
        "offset": 85,
        "target": "mypy.server.deps"
      },
      {
        "code": "unreachable",
        "column": 24,
        "message": "Statement is unreachable",
        "offset": 337,
        "target": "mypy.server.deps.DependencyVisitor.visit_assignment_stmt"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"upper_bound\" has type \"Type\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 534,
        "target": "mypy.server.deps.TypeTriggersVisitor.visit_type_var"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 84,
        "target": "mypy.server.deps.dump_all_dependencies"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.server.deps.dump_all_dependencies"
      }
    ],
    "mypy/server/mergecheck.py": [
      {
        "code": "unreachable",
        "column": 12,
        "message": "Statement is unreachable",
        "offset": 31,
        "target": "mypy.server.mergecheck.check_consistency"
      }
    ],
    "mypy/server/objgraph.py": [
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"(type[BuiltinFunctionType], type[FunctionType], type[MethodType], type[(object) -> Iterable[str]], type[(object, object) -> bool], type[(object) -> bool])\")",
        "offset": 14,
        "target": "mypy.server.objgraph"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"type[FunctionType]\")",
        "offset": 2,
        "target": "mypy.server.objgraph"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"type[MethodType]\")",
        "offset": 1,
        "target": "mypy.server.objgraph"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"set[type[ReferenceType[Any]]]\")",
        "offset": 32,
        "target": "mypy.server.objgraph"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"type[ReferenceType[Any]]\")",
        "offset": 1,
        "target": "mypy.server.objgraph"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"type[ReferenceType[Any]]\")",
        "offset": 0,
        "target": "mypy.server.objgraph"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 5,
        "target": "mypy.server.objgraph.isproperty"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression type contains \"Any\" (has type \"type[property]\")",
        "offset": 0,
        "target": "mypy.server.objgraph.isproperty"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.server.objgraph.get_edge_candidates"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.server.objgraph.get_edge_candidates"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 1,
        "target": "mypy.server.objgraph.get_edge_candidates"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.server.objgraph.get_edge_candidates"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.server.objgraph.get_edge_candidates"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 1,
        "target": "mypy.server.objgraph.get_edge_candidates"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.server.objgraph.get_edge_candidates"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(int, Any)\")",
        "offset": 6,
        "target": "mypy.server.objgraph.get_edge_candidates"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(int, Any)\")",
        "offset": 0,
        "target": "mypy.server.objgraph.get_edge_candidates"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.server.objgraph.get_edge_candidates"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"enumerate[Any]\")",
        "offset": 0,
        "target": "mypy.server.objgraph.get_edge_candidates"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"(int, Any)\")",
        "offset": 1,
        "target": "mypy.server.objgraph.get_edge_candidates"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.server.objgraph.get_edge_candidates"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"(type[BuiltinFunctionType], type[FunctionType], type[MethodType], type[(object) -> Iterable[str]], type[(object, object) -> bool], type[(object) -> bool])\")",
        "offset": 5,
        "target": "mypy.server.objgraph.get_edges"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[union-attr]\" instead)",
        "offset": 5,
        "target": null
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[union-attr]\" instead)",
        "offset": 2,
        "target": null
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[attr-defined]\" instead)",
        "offset": 2,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"set[type[ReferenceType[Any]]]\")",
        "offset": 2,
        "target": "mypy.server.objgraph.get_edges"
      }
    ],
    "mypy/server/update.py": [
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 233,
        "target": "mypy.server.update.FineGrainedBuildManager.update"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 595,
        "target": "mypy.server.update.propagate_changes_using_dependencies"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.server.update.propagate_changes_using_dependencies"
      }
    ],
    "mypy/split_namespace.py": [
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 17,
        "target": "mypy.split_namespace.SplitNamespace.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.split_namespace.SplitNamespace.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.split_namespace.SplitNamespace.__init__"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 2,
        "target": "mypy.split_namespace.SplitNamespace._get"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"(Any, Any)\")",
        "offset": 1,
        "target": "mypy.split_namespace.SplitNamespace._get"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.split_namespace.SplitNamespace._get"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.split_namespace.SplitNamespace._get"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 2,
        "target": "mypy.split_namespace.SplitNamespace.__setattr__"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.split_namespace.SplitNamespace.__setattr__"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.split_namespace.SplitNamespace.__setattr__"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.split_namespace.SplitNamespace.__setattr__"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.split_namespace.SplitNamespace.__setattr__"
      },
      {
        "code": "no-any-expr",
        "column": 71,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.split_namespace.SplitNamespace.__setattr__"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.split_namespace.SplitNamespace.__setattr__"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.split_namespace.SplitNamespace.__setattr__"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 2,
        "target": "mypy.split_namespace.SplitNamespace.__getattr__"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.split_namespace.SplitNamespace.__getattr__"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.split_namespace.SplitNamespace.__getattr__"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.split_namespace.SplitNamespace.__getattr__"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.split_namespace.SplitNamespace.__getattr__"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.split_namespace.SplitNamespace.__getattr__"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.split_namespace.SplitNamespace.__getattr__"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.split_namespace.SplitNamespace.__getattr__"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.split_namespace.SplitNamespace.__getattr__"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.split_namespace.SplitNamespace.__getattr__"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.split_namespace.SplitNamespace.__getattr__"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.split_namespace.SplitNamespace.__getattr__"
      }
    ],
    "mypy/stats.py": [
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"expr\" has type \"Expression\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 214,
        "target": "mypy.stats.StatisticsVisitor.visit_yield_from_expr"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 19,
        "target": "mypy.stats.StatisticsVisitor.record_call_target_precision"
      }
    ],
    "mypy/strconv.py": [
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 78,
        "target": "mypy.strconv.StrConv.func_helper"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.strconv.StrConv.func_helper"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.func_helper"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.func_helper"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.func_helper"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.func_helper"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.func_helper"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.func_helper"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 6,
        "target": "mypy.strconv.StrConv.visit_mypy_file"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_mypy_file"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 7,
        "target": "mypy.strconv.StrConv.visit_mypy_file"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_mypy_file"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_mypy_file"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 42,
        "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 53,
        "target": "mypy.strconv.StrConv.visit_assignment_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 5,
        "target": "mypy.strconv.StrConv.visit_assignment_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_assignment_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_assignment_stmt"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 6,
        "target": "mypy.strconv.StrConv.visit_while_stmt"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_while_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_while_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_while_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_while_stmt"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypy.strconv.StrConv.visit_for_stmt"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_for_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_for_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_for_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_for_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_for_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_for_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_for_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_for_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_for_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_for_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_for_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_for_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_for_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_for_stmt"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 6,
        "target": "mypy.strconv.StrConv.visit_if_stmt"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_if_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_if_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_if_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_if_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_if_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 3,
        "target": "mypy.strconv.StrConv.visit_if_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_if_stmt"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 27,
        "target": "mypy.strconv.StrConv.visit_try_stmt"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_try_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 3,
        "target": "mypy.strconv.StrConv.visit_try_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_try_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_try_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_try_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_try_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_try_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 3,
        "target": "mypy.strconv.StrConv.visit_try_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_try_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_try_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_try_stmt"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypy.strconv.StrConv.visit_with_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_with_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_with_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_with_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_with_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_with_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_with_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_with_stmt"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypy.strconv.StrConv.visit_print_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_print_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_print_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_print_stmt"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 6,
        "target": "mypy.strconv.StrConv.visit_match_stmt"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_match_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_match_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_match_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_match_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_match_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_match_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_match_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_match_stmt"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 19,
        "target": "mypy.strconv.StrConv.str_repr"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.strconv.StrConv.str_repr"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.strconv.StrConv.str_repr"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> str\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.str_repr"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.strconv.StrConv.str_repr"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.strconv.StrConv.str_repr"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"expr\" has type \"Expression\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 55,
        "target": "mypy.strconv.StrConv.visit_yield_from_expr"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 9,
        "target": "mypy.strconv.StrConv.visit_call_expr"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"list[str | (str, list[Any])]\")",
        "offset": 5,
        "target": "mypy.strconv.StrConv.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[str | (str, list[Any])]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[str | (str, list[Any])]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_call_expr"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypy.strconv.StrConv.visit_call_expr"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[str | (str, list[Any])]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[str | (str, list[Any])]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_call_expr"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 53,
        "target": "mypy.strconv.StrConv.visit_type_var_expr"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_type_var_expr"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_type_var_expr"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_type_var_expr"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_type_var_expr"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_type_var_expr"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_type_var_expr"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_type_var_expr"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_type_var_expr"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_type_var_expr"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 5,
        "target": "mypy.strconv.StrConv.visit_paramspec_expr"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_paramspec_expr"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_paramspec_expr"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_paramspec_expr"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_paramspec_expr"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_paramspec_expr"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_paramspec_expr"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_paramspec_expr"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 5,
        "target": "mypy.strconv.StrConv.visit_type_var_tuple_expr"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_type_var_tuple_expr"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_type_var_tuple_expr"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_type_var_tuple_expr"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_type_var_tuple_expr"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_type_var_tuple_expr"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_type_var_tuple_expr"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_type_var_tuple_expr"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 42,
        "target": "mypy.strconv.StrConv.visit_slice_expr"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_slice_expr"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_slice_expr"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_slice_expr"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_slice_expr"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.strconv.StrConv.visit_slice_expr"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_slice_expr"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_slice_expr"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 27,
        "target": "mypy.strconv.StrConv.visit_mapping_pattern"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_mapping_pattern"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_mapping_pattern"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_mapping_pattern"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.strconv.StrConv.visit_mapping_pattern"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypy.strconv.StrConv.visit_class_pattern"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_class_pattern"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_class_pattern"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.strconv.StrConv.visit_class_pattern"
      }
    ],
    "mypy/stubdoc.py": [
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 48,
        "target": "mypy.stubdoc.ArgSig.__eq__"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubdoc.ArgSig.__eq__"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> int\")",
        "offset": 156,
        "target": "mypy.stubdoc.DocStringParser.get_signatures"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> int\")",
        "offset": 0,
        "target": "mypy.stubdoc.DocStringParser.get_signatures"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 72,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"(str | Any, list[str], list[str])\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 4,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 2,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 2,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 2,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 2,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 1,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 1,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"(str | Any, list[str | Any], list[str | Any])\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_signature"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 35,
        "target": "mypy.stubdoc.parse_all_signatures"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.stubdoc.parse_all_signatures"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 34,
        "target": "mypy.stubdoc.infer_prop_type_from_docstring"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 0,
        "target": "mypy.stubdoc.infer_prop_type_from_docstring"
      }
    ],
    "mypy/stubgen.py": [
      {
        "code": "redundant-expr",
        "column": 17,
        "message": "Left operand of \"and\" is always true",
        "offset": 616,
        "target": "mypy.stubgen.StubGenerator.visit_overloaded_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 36,
        "target": "mypy.stubgen.StubGenerator.visit_func_def"
      },
      {
        "code": "no-any-expr",
        "column": 66,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 33,
        "target": "mypy.stubgen.StubGenerator.visit_func_def"
      },
      {
        "code": "redundant-expr",
        "column": 13,
        "message": "Left operand of \"and\" is always true",
        "offset": 7,
        "target": "mypy.stubgen.StubGenerator.visit_func_def"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[misc]\" instead)",
        "offset": 239,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 755,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 3,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgen.parse_options"
      }
    ],
    "mypy/stubgenc.py": [
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[(str, Any)]\")",
        "offset": 57,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"((str, Any)) -> str\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"((str, Any)) -> str\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 1,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"list[(str, Any)]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 3,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"list[(str, Any)]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 4,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"list[(str, Any)]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 1,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.generate_stub_for_c_module"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 50,
        "target": "mypy.stubgenc.is_c_property_readonly"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgenc.is_c_property_readonly"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.is_c_property_readonly"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.is_c_property_readonly"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.is_c_property_readonly"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 49,
        "target": "mypy.stubgenc.generate_c_function_stub"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.stubgenc.generate_c_function_stub"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 2,
        "target": "mypy.stubgenc.generate_c_function_stub"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgenc.generate_c_function_stub"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 61,
        "target": "mypy.stubgenc.strip_or_import"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 0,
        "target": "mypy.stubgenc.strip_or_import"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.stubgenc.strip_or_import"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.stubgenc.strip_or_import"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "\"module\" has type Module which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 1,
        "target": "mypy.stubgenc.strip_or_import"
      },
      {
        "code": "truthy-bool",
        "column": 9,
        "message": "\"module\" has type Module which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 6,
        "target": "mypy.stubgenc.strip_or_import"
      },
      {
        "code": "truthy-bool",
        "column": 9,
        "message": "\"module\" has type Module which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 0,
        "target": "mypy.stubgenc.strip_or_import"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 44,
        "target": "mypy.stubgenc.generate_c_property_stub"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 2,
        "target": "mypy.stubgenc.generate_c_property_stub"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.stubgenc.generate_c_property_stub"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_property_stub"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 34,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[(str, Any)]\")",
        "offset": 1,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"ItemsView[str, Any]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"ItemsView[str, Any]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"ItemsView[str, Any]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> (int, str)\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"((str, Any)) -> (int, str)\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"((str, Any)) -> (int, str)\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 72,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 72,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 72,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 7,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"list[(str, Any)]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
        "offset": 5,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 4,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"list[(str, Any)]\")",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 5,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"type[type]\")",
        "offset": 1,
        "target": "mypy.stubgenc.generate_c_type_stub"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | object\")",
        "offset": 45,
        "target": "mypy.stubgenc.get_type_fullname"
      }
    ],
    "mypy/stubtest.py": [
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 54,
        "target": "mypy.stubtest._style"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.stubtest._style"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.stubtest._style"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.stubtest._style"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 14,
        "target": "mypy.stubtest.Error.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 24,
        "target": "mypy.stubtest.Error.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"Any | Node | Missing\")",
        "offset": 1,
        "target": "mypy.stubtest.Error.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 59,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 1,
        "target": "mypy.stubtest.Error.__init__"
      },
      {
        "code": "unreachable",
        "column": 12,
        "message": "Statement is unreachable",
        "offset": 30,
        "target": "mypy.stubtest.Error.get_description"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 4,
        "target": "mypy.stubtest.Error.get_description"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest.Error.get_description"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.stubtest.Error.get_description"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (unannotated)\"",
        "offset": 70,
        "target": "mypy.stubtest.test_module"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.stubtest.test_module"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.test_module"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.stubtest.test_module"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.test_module"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.test_module"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.test_module"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.test_module"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.test_module"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.test_module"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.test_module"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.test_module"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"((...) -> _T) -> _SingleDispatchCallable[_T]\")",
        "offset": 17,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"(Node | Missing, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"(Node | Missing, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.stubtest.verify"
      },
      {
        "code": "no-any-decorated",
        "column": 0,
        "message": "Type of decorated function contains type \"Any\" (\"_SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 11,
        "target": "mypy.stubtest.verify"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]\")",
        "offset": 3,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[MypyFile, _SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "unreachable",
        "column": 8,
        "message": "Statement is unreachable",
        "offset": 8,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "unreachable",
        "column": 8,
        "message": "Statement is unreachable",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any\"",
        "offset": 11,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 2,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 3,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-return",
        "column": 12,
        "message": "Returning Any from function declared to return \"bool\"",
        "offset": 1,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-return",
        "column": 12,
        "message": "Returning Any from function declared to return \"bool\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 2,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 10,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 10,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 5,
        "target": "mypy.stubtest.verify_mypyfile"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]\")",
        "offset": 9,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[TypeInfo, _SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"(TypeInfo, type[Any] | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-decorated",
        "column": 0,
        "message": "Type of decorated function contains type \"Any\" (\"(TypeInfo, type[Any] | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"type[Any] | Missing\")",
        "offset": 3,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"type[Any] | Missing\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 3,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[type]\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[type]\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "unreachable",
        "column": 8,
        "message": "Statement is unreachable",
        "offset": 1,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "unreachable",
        "column": 8,
        "message": "Statement is unreachable",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[misc, valid-type]\" instead)",
        "offset": 4,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 4,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 5,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 11,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-explicit",
        "column": 17,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-explicit",
        "column": 17,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 18,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 11,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 3,
        "target": "mypy.stubtest.verify_typeinfo"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypy.stubtest._verify_static_class_methods"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.stubtest._verify_static_class_methods"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 3,
        "target": "mypy.stubtest._verify_static_class_methods"
      },
      {
        "code": "no-any-expr",
        "column": 79,
        "message": "Expression type contains \"Any\" (has type \"type[type]\")",
        "offset": 0,
        "target": "mypy.stubtest._verify_static_class_methods"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"type[classmethod[Any]]\")",
        "offset": 18,
        "target": "mypy.stubtest._verify_static_class_methods"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"type[classmethod[Any]]\")",
        "offset": 0,
        "target": "mypy.stubtest._verify_static_class_methods"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"type[classmethod[Any]]\")",
        "offset": 2,
        "target": "mypy.stubtest._verify_static_class_methods"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"type[classmethod[Any]]\")",
        "offset": 0,
        "target": "mypy.stubtest._verify_static_class_methods"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"type[staticmethod[Any]]\")",
        "offset": 2,
        "target": "mypy.stubtest._verify_static_class_methods"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"type[staticmethod[Any]]\")",
        "offset": 0,
        "target": "mypy.stubtest._verify_static_class_methods"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"type[staticmethod[Any]]\")",
        "offset": 2,
        "target": "mypy.stubtest._verify_static_class_methods"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"type[staticmethod[Any]]\")",
        "offset": 0,
        "target": "mypy.stubtest._verify_static_class_methods"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 24,
        "target": "mypy.stubtest._verify_arg_name"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 0,
        "target": "mypy.stubtest._verify_arg_name"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 18,
        "target": "mypy.stubtest._verify_arg_default_value"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest._verify_arg_default_value"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 0,
        "target": "mypy.stubtest._verify_arg_default_value"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.stubtest._verify_arg_default_value"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 12,
        "target": "mypy.stubtest._verify_arg_default_value"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 0,
        "target": "mypy.stubtest._verify_arg_default_value"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest._verify_arg_default_value"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest._verify_arg_default_value"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest._verify_arg_default_value"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest._verify_arg_default_value"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest._verify_arg_default_value"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest._verify_arg_default_value"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 35,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 0,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 4,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 0,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 4,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 0,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-return",
        "column": 16,
        "message": "Returning Any from function declared to return \"bool\"",
        "offset": 1,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 0,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 4,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> (bool, str)\")",
        "offset": 3,
        "target": "mypy.stubtest.Signature.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 33,
        "target": "mypy.stubtest.Signature.from_inspect_signature"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 1,
        "target": "mypy.stubtest.Signature.from_inspect_signature"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 3,
        "target": "mypy.stubtest.Signature.from_inspect_signature"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 2,
        "target": "mypy.stubtest.Signature.from_inspect_signature"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 2,
        "target": "mypy.stubtest.Signature.from_inspect_signature"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 94,
        "target": "mypy.stubtest._verify_signature"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 0,
        "target": "mypy.stubtest._verify_signature"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 12,
        "target": "mypy.stubtest._verify_signature"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 0,
        "target": "mypy.stubtest._verify_signature"
      },
      {
        "code": "no-any-expr",
        "column": 65,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 46,
        "target": "mypy.stubtest._verify_signature"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"set[str | Any]\")",
        "offset": 23,
        "target": "mypy.stubtest._verify_signature"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]\")",
        "offset": 6,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[FuncItem, _SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"(FuncItem, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.stubtest.verify_funcitem"
      },
      {
        "code": "no-any-decorated",
        "column": 0,
        "message": "Type of decorated function contains type \"Any\" (\"(FuncItem, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 3,
        "target": "mypy.stubtest.verify_funcitem"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.stubtest.verify_funcitem"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.verify_funcitem"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.verify_funcitem"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.stubtest.verify_funcitem"
      },
      {
        "code": "no-any-expr",
        "column": 70,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.verify_funcitem"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest.verify_funcitem"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.verify_funcitem"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 18,
        "target": "mypy.stubtest.verify_funcitem"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 13,
        "target": "mypy.stubtest.verify_funcitem"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]\")",
        "offset": 5,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[Missing, _SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"(Missing, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.stubtest.verify_none"
      },
      {
        "code": "no-any-decorated",
        "column": 0,
        "message": "Type of decorated function contains type \"Any\" (\"(Missing, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 3,
        "target": "mypy.stubtest.verify_none"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]\")",
        "offset": 3,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[Var, _SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"(Var, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.stubtest.verify_var"
      },
      {
        "code": "no-any-decorated",
        "column": 0,
        "message": "Type of decorated function contains type \"Any\" (\"(Var, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 3,
        "target": "mypy.stubtest.verify_var"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.stubtest.verify_var"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_var"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.stubtest.verify_var"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.stubtest.verify_var"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 9,
        "target": "mypy.stubtest.verify_var"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.verify_var"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"Enum | Any\")",
        "offset": 9,
        "target": "mypy.stubtest.verify_var"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]\")",
        "offset": 4,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[OverloadedFuncDef, _SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"(OverloadedFuncDef, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.stubtest.verify_overloadedfuncdef"
      },
      {
        "code": "no-any-decorated",
        "column": 0,
        "message": "Type of decorated function contains type \"Any\" (\"(OverloadedFuncDef, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 3,
        "target": "mypy.stubtest.verify_overloadedfuncdef"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.stubtest.verify_overloadedfuncdef"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.stubtest.verify_overloadedfuncdef"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.stubtest.verify_overloadedfuncdef"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.verify_overloadedfuncdef"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.verify_overloadedfuncdef"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.stubtest.verify_overloadedfuncdef"
      },
      {
        "code": "no-any-expr",
        "column": 70,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.verify_overloadedfuncdef"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest.verify_overloadedfuncdef"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 18,
        "target": "mypy.stubtest.verify_overloadedfuncdef"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]\")",
        "offset": 6,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[TypeVarExpr, _SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"(TypeVarExpr, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.stubtest.verify_typevarexpr"
      },
      {
        "code": "no-any-decorated",
        "column": 0,
        "message": "Type of decorated function contains type \"Any\" (\"(TypeVarExpr, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 3,
        "target": "mypy.stubtest.verify_typevarexpr"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.stubtest.verify_typevarexpr"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[TypeVar]\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_typevarexpr"
      },
      {
        "code": "no-any-expr",
        "column": 59,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.verify_typevarexpr"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]\")",
        "offset": 4,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[ParamSpecExpr, _SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"(ParamSpecExpr, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-decorated",
        "column": 0,
        "message": "Type of decorated function contains type \"Any\" (\"(ParamSpecExpr, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 3,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"(Any | None, Any | None)\")",
        "offset": 3,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 1,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 2,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"(Any | None, Any | None)\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"(Any | None, Any | None)\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 65,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 65,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 1,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.verify_paramspecexpr"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 4,
        "target": "mypy.stubtest._verify_readonly_property"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest._verify_readonly_property"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[property]\")",
        "offset": 0,
        "target": "mypy.stubtest._verify_readonly_property"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest._verify_readonly_property"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.stubtest._verify_readonly_property"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 2,
        "target": "mypy.stubtest._verify_readonly_property"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]\")",
        "offset": 59,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[Decorator, _SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"(Decorator, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.stubtest.verify_decorator"
      },
      {
        "code": "no-any-decorated",
        "column": 0,
        "message": "Type of decorated function contains type \"Any\" (\"(Decorator, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 3,
        "target": "mypy.stubtest.verify_decorator"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.stubtest.verify_decorator"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.verify_decorator"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.stubtest.verify_decorator"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]\")",
        "offset": 3,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[TypeAlias, _SingleDispatchCallable[Iterator[Error], (Node | Missing, Any | Missing, list[str]) -> Iterator[Error]]]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"(TypeAlias, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.stubtest.verify_typealias"
      },
      {
        "code": "no-any-decorated",
        "column": 0,
        "message": "Type of decorated function contains type \"Any\" (\"(TypeAlias, Any | Missing, list[str]) -> Iterator[Error]\")",
        "offset": 0,
        "target": "mypy.stubtest"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"Any | Missing\")",
        "offset": 4,
        "target": "mypy.stubtest.verify_typealias"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.stubtest.verify_typealias"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 3,
        "target": "mypy.stubtest.verify_typealias"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_typealias"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_typealias"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.verify_typealias"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"Any | ()\")",
        "offset": 4,
        "target": "mypy.stubtest.verify_typealias"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_typealias"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.verify_typealias"
      },
      {
        "code": "no-any-expr",
        "column": 65,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest.verify_typealias"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.stubtest.verify_typealias"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 77,
        "target": "mypy.stubtest.is_probably_a_function"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest.is_probably_a_function"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.is_probably_a_function"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"(type[FunctionType], type[BuiltinFunctionType])\")",
        "offset": 0,
        "target": "mypy.stubtest.is_probably_a_function"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"(type[FunctionType], type[BuiltinFunctionType])\")",
        "offset": 0,
        "target": "mypy.stubtest.is_probably_a_function"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[FunctionType]\")",
        "offset": 0,
        "target": "mypy.stubtest.is_probably_a_function"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[FunctionType]\")",
        "offset": 0,
        "target": "mypy.stubtest.is_probably_a_function"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.is_probably_a_function"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.is_probably_a_function"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"(type[MethodType], type[BuiltinFunctionType])\")",
        "offset": 0,
        "target": "mypy.stubtest.is_probably_a_function"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"(type[MethodType], type[BuiltinFunctionType])\")",
        "offset": 0,
        "target": "mypy.stubtest.is_probably_a_function"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"type[MethodType]\")",
        "offset": 0,
        "target": "mypy.stubtest.is_probably_a_function"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"type[MethodType]\")",
        "offset": 0,
        "target": "mypy.stubtest.is_probably_a_function"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.is_probably_a_function"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.is_probably_a_function"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[property]\")",
        "offset": 5,
        "target": "mypy.stubtest.is_read_only_property"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[property]\")",
        "offset": 0,
        "target": "mypy.stubtest.is_read_only_property"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"(Any, Any) -> None | None\")",
        "offset": 0,
        "target": "mypy.stubtest.is_read_only_property"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypy.stubtest.safe_inspect_signature"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest.safe_inspect_signature"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 35,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[property]\")",
        "offset": 0,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(type[FunctionType], type[BuiltinFunctionType], type[MethodType], type[BuiltinFunctionType])\")",
        "offset": 1,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression type contains \"Any\" (has type \"type[FunctionType]\")",
        "offset": 0,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"type[MethodType]\")",
        "offset": 1,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 15,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 0,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 0,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 1,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 1,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 1,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 1,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[Parameter]\")",
        "offset": 2,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 19,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 3,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 9,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 10,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 289,
        "target": "mypy.stubtest.parse_options"
      }
    ],
    "mypy/stubutil.py": [
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 101,
        "target": "mypy.stubutil.find_module_path_and_all_py2"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 1,
        "target": "mypy.stubutil.find_module_path_and_all_py2"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.stubutil.find_module_path_and_all_py2"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 14,
        "target": "mypy.stubutil.find_module_path_using_py2_sys_path"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.stubutil.find_module_path_using_py2_sys_path"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 75,
        "target": "mypy.stubutil.report_missing"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.stubutil.report_missing"
      }
    ],
    "mypy/subtypes.py": [
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 322,
        "target": "mypy.subtypes.SubtypeVisitor.visit_instance"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 44,
        "target": "mypy.subtypes.SubtypeVisitor.visit_parameters"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 10,
        "target": "mypy.subtypes.SubtypeVisitor.visit_callable_type"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 114,
        "target": "mypy.subtypes.SubtypeVisitor.visit_overloaded"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 96,
        "target": "mypy.subtypes.SubtypeVisitor.visit_type_type"
      },
      {
        "code": "no-any-expr",
        "column": 71,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 91,
        "target": "mypy.subtypes.is_protocol_implementation"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 68,
        "target": "mypy.subtypes.find_member"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 71,
        "target": "mypy.subtypes.find_node_type"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"(type[Overloaded], type[CallableType])\")",
        "offset": 19,
        "target": "mypy.subtypes.non_method_protocol_members"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.subtypes.non_method_protocol_members"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 388,
        "target": "mypy.subtypes.unify_generic_callable"
      },
      {
        "code": "no-any-expr",
        "column": 83,
        "message": "Expression type contains \"Any\" (has type \"(VarArg(Any)) -> None\")",
        "offset": 4,
        "target": "mypy.subtypes.unify_generic_callable"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 233,
        "target": "mypy.subtypes.ProperSubtypeVisitor.visit_instance"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 41,
        "target": "mypy.subtypes.ProperSubtypeVisitor.visit_parameters"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 7,
        "target": "mypy.subtypes.ProperSubtypeVisitor.visit_callable_type"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 70,
        "target": "mypy.subtypes.ProperSubtypeVisitor.visit_type_type"
      }
    ],
    "mypy/suggestions.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.checkexpr\" does not explicitly export attribute \"map_actuals_to_formals\"; implicit reexport disabled",
        "offset": 51,
        "target": "mypy.suggestions"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 103,
        "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 3,
        "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> AnyType\")",
        "offset": 2,
        "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(int, Any (from unimported type))\")",
        "offset": 2,
        "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(int, Any (from unimported type))\")",
        "offset": 0,
        "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"enumerate[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 131,
        "target": "mypy.suggestions.SuggestionEngine.get_starting_type"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"islice[tuple[Any, ...]]\")",
        "offset": 76,
        "target": "mypy.suggestions.SuggestionEngine.get_guesses"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"product[tuple[Any, ...]]\")",
        "offset": 0,
        "target": "mypy.suggestions.SuggestionEngine.get_guesses"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"product[tuple[Any, ...]]\")",
        "offset": 0,
        "target": "mypy.suggestions.SuggestionEngine.get_guesses"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 1,
        "target": "mypy.suggestions.SuggestionEngine.get_guesses"
      },
      {
        "code": "no-any-expr",
        "column": 72,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.suggestions.SuggestionEngine.get_guesses"
      },
      {
        "code": "no-any-expr",
        "column": 72,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.suggestions.SuggestionEngine.get_guesses"
      },
      {
        "code": "no-any-expr",
        "column": 86,
        "message": "Expression type contains \"Any\" (has type \"islice[tuple[Any, ...]]\")",
        "offset": 0,
        "target": "mypy.suggestions.SuggestionEngine.get_guesses"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> (int, int)\")",
        "offset": 37,
        "target": "mypy.suggestions.SuggestionEngine.find_best"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 13,
        "target": "mypy.suggestions.SuggestionEngine.get_guesses_from_parent"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.suggestions.SuggestionEngine.get_guesses_from_parent"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 183,
        "target": "mypy.suggestions.SuggestionEngine.extract_from_decorator"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 68,
        "target": "mypy.suggestions.SuggestionEngine.json_suggestion"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 41,
        "target": "mypy.suggestions.SuggestionEngine.score_type"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.suggestions.SuggestionEngine.score_type"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 26,
        "target": "mypy.suggestions.any_score_type"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.suggestions.any_score_type"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"partial_fallback\" has type \"Instance\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 75,
        "target": "mypy.suggestions.TypeFormatter.visit_tuple_type"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"partial_fallback\" has type \"Instance\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 0,
        "target": "mypy.suggestions.TypeFormatter.visit_tuple_type"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 134,
        "target": "mypy.suggestions.refine_type"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.suggestions.refine_type"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.suggestions.refine_type"
      }
    ],
    "mypy/test/data.py": [
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 115,
        "target": "mypy.test.data.parse_test_case"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.test.data.parse_test_case"
      },
      {
        "code": "no-untyped-usage",
        "column": 8,
        "message": "Usage of untyped name \"suite\" in typed context",
        "offset": 157,
        "target": "mypy.test.data.DataDrivenTestCase.runtest"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Untyped\"",
        "offset": 0,
        "target": "mypy.test.data.DataDrivenTestCase.runtest"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Untyped\"",
        "offset": 1,
        "target": "mypy.test.data.DataDrivenTestCase.runtest"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Untyped\"",
        "offset": 2,
        "target": "mypy.test.data.DataDrivenTestCase.runtest"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 29,
        "target": "mypy.test.data.DataDrivenTestCase.setup"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 35,
        "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 17,
        "target": "mypy.test.data.module_from_path"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 1,
        "target": "mypy.test.data.module_from_path"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 1,
        "target": "mypy.test.data.module_from_path"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 124,
        "target": "mypy.test.data.expand_errors"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.test.data.expand_errors"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.test.data.expand_errors"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.test.data.expand_errors"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.test.data.expand_errors"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.test.data.expand_errors"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.test.data.expand_errors"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.test.data.expand_errors"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.test.data.expand_errors"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.test.data.expand_errors"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.test.data.expand_errors"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.test.data.expand_errors"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.expand_errors"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"tuple[str | Any, ...]\")",
        "offset": 13,
        "target": "mypy.test.data.fix_win_path"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.fix_win_path"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.fix_win_path"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.fix_win_path"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.test.data.fix_win_path"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.fix_win_path"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.test.data.fix_win_path"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.fix_win_path"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.fix_win_path"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.fix_win_path"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 12,
        "target": "mypy.test.data.fix_cobertura_filename"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.fix_cobertura_filename"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 13,
        "target": "mypy.test.data.pytest_addoption"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.test.data.pytest_addoption"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.data.pytest_addoption"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.test.data.pytest_addoption"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.test.data.pytest_addoption"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.test.data.pytest_addoption"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.test.data.pytest_addoption"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.test.data.pytest_addoption"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 11,
        "target": "mypy.test.data.pytest_pycollect_makeitem"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"type[type]\")",
        "offset": 6,
        "target": "mypy.test.data.pytest_pycollect_makeitem"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Untyped\"",
        "offset": 6,
        "target": "mypy.test.data.pytest_pycollect_makeitem"
      },
      {
        "code": null,
        "column": 19,
        "message": "Error code \"no-any-expr\" not covered by \"type: ignore\" comment",
        "offset": 0,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.test.data.pytest_pycollect_makeitem"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 16,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 9,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 2,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 73,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 1,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 73,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 73,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 73,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 73,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 73,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 73,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 73,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Untyped\"",
        "offset": 1,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": null,
        "column": 14,
        "message": "Error code \"no-any-expr\" not covered by \"type: ignore\" comment",
        "offset": 0,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 4,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 1,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 1,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 2,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"set[str | Any]\")",
        "offset": 3,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"set[str | Any]\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"set[str | Any]\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.data.split_test_cases"
      },
      {
        "code": "no-untyped-usage",
        "column": 27,
        "message": "Usage of untyped name \"obj\" in typed context",
        "offset": 8,
        "target": "mypy.test.data.DataSuiteCollector.collect"
      },
      {
        "code": "no-untyped-usage",
        "column": 27,
        "message": "Usage of untyped name \"obj\" in typed context",
        "offset": 0,
        "target": "mypy.test.data.DataSuiteCollector.collect"
      },
      {
        "code": "no-any-return",
        "column": 8,
        "message": "Returning Any from function declared to return \"DataFileCollector\"",
        "offset": 23,
        "target": "mypy.test.data.DataFileCollector.from_parent"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Untyped\"",
        "offset": 0,
        "target": "mypy.test.data.DataFileCollector.from_parent"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Untyped\"",
        "offset": 5,
        "target": "mypy.test.data.DataFileCollector.collect"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Untyped\"",
        "offset": 1,
        "target": "mypy.test.data.DataFileCollector.collect"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Untyped\"",
        "offset": 0,
        "target": "mypy.test.data.DataFileCollector.collect"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Untyped\"",
        "offset": 0,
        "target": "mypy.test.data.DataFileCollector.collect"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Untyped\"",
        "offset": 0,
        "target": "mypy.test.data.DataFileCollector.collect"
      }
    ],
    "mypy/test/helpers.py": [
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 127,
        "target": "mypy.test.helpers.assert_module_equivalence"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 0,
        "target": "mypy.test.helpers.assert_module_equivalence"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 186,
        "target": "mypy.test.helpers.retry_on_error"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 71,
        "target": "mypy.test.helpers.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 19,
        "target": "mypy.test.helpers.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypy.test.helpers.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Untyped\"",
        "offset": 13,
        "target": "mypy.test.helpers.parse_options"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"Any | str\")",
        "offset": 97,
        "target": "mypy.test.helpers.normalize_file_output"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"Any | str\")",
        "offset": 1,
        "target": "mypy.test.helpers.normalize_file_output"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"Any | str\")",
        "offset": 0,
        "target": "mypy.test.helpers.normalize_file_output"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"Any | str\")",
        "offset": 0,
        "target": "mypy.test.helpers.normalize_file_output"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"Any | str\")",
        "offset": 0,
        "target": "mypy.test.helpers.normalize_file_output"
      }
    ],
    "mypy/test/testapi.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
        "offset": 6,
        "target": "mypy.test.testapi"
      },
      {
        "code": "no-subclass-any",
        "column": 15,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 3,
        "target": "mypy.test.testapi"
      },
      {
        "code": "no-any-unimported",
        "column": 15,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testapi"
      }
    ],
    "mypy/test/testargs.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
        "offset": 10,
        "target": "mypy.test.testargs"
      },
      {
        "code": "no-subclass-any",
        "column": 15,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 5,
        "target": "mypy.test.testargs"
      },
      {
        "code": "no-any-unimported",
        "column": 15,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testargs"
      }
    ],
    "mypy/test/testcheck.py": [
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[import]\" instead)",
        "offset": 26,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 32,
        "target": "mypy.test.testcheck.TypeCheckSuite.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.test.testcheck.TypeCheckSuite.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 13,
        "target": "mypy.test.testcheck.TypeCheckSuite.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Literal[False] | Untyped\")",
        "offset": 107,
        "target": "mypy.test.testcheck.TypeCheckSuite.run_case_once"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Untyped\"",
        "offset": 0,
        "target": "mypy.test.testcheck.TypeCheckSuite.run_case_once"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 65,
        "target": "mypy.test.testcheck.TypeCheckSuite.find_error_message_paths"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"set[str | Any]\")",
        "offset": 1,
        "target": "mypy.test.testcheck.TypeCheckSuite.find_error_message_paths"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.testcheck.TypeCheckSuite.find_error_message_paths"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.testcheck.TypeCheckSuite.find_error_message_paths"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"set[str | Any]\")",
        "offset": 1,
        "target": "mypy.test.testcheck.TypeCheckSuite.find_error_message_paths"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 10,
        "target": "mypy.test.testcheck.TypeCheckSuite.find_missing_cache_files"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 1,
        "target": "mypy.test.testcheck.TypeCheckSuite.find_missing_cache_files"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"CacheMeta | None\")",
        "offset": 0,
        "target": "mypy.test.testcheck.TypeCheckSuite.find_missing_cache_files"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 35,
        "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 4,
        "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 1,
        "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[(str | Any, str, str)]\")",
        "offset": 3,
        "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"(str | Any, str, str)\")",
        "offset": 0,
        "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"(str | Any, str, str)\")",
        "offset": 0,
        "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"list[(str | Any, str, str)]\")",
        "offset": 1,
        "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
      }
    ],
    "mypy/test/testcmdline.py": [
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[import]\" instead)",
        "offset": 22,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 24,
        "target": "mypy.test.testcmdline.PythonCmdlineSuite.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.test.testcmdline.PythonCmdlineSuite.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 41,
        "target": "mypy.test.testcmdline.test_python_cmdline"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"list[str] | int | Any\")",
        "offset": 18,
        "target": "mypy.test.testcmdline.test_python_cmdline"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 0,
        "target": "mypy.test.testcmdline.test_python_cmdline"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, int | Any, str)\")",
        "offset": 3,
        "target": "mypy.test.testcmdline.test_python_cmdline"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 1,
        "target": "mypy.test.testcmdline.test_python_cmdline"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 0,
        "target": "mypy.test.testcmdline.test_python_cmdline"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 6,
        "target": "mypy.test.testcmdline.test_python_cmdline"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 0,
        "target": "mypy.test.testcmdline.test_python_cmdline"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 1,
        "target": "mypy.test.testcmdline.test_python_cmdline"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 24,
        "target": "mypy.test.testcmdline.parse_args"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypy.test.testcmdline.parse_args"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 15,
        "target": "mypy.test.testcmdline.parse_cwd"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 0,
        "target": "mypy.test.testcmdline.parse_cwd"
      }
    ],
    "mypy/test/testdaemon.py": [
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"(int, Any)\")",
        "offset": 98,
        "target": "mypy.test.testdaemon.run_cmd"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testdaemon.run_cmd"
      }
    ],
    "mypy/test/testfinegrained.py": [
      {
        "code": "unreachable",
        "column": 12,
        "message": "Statement is unreachable",
        "offset": 73,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 88,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.run_check"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.run_check"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.run_check"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.run_check"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.run_check"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.run_check"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.run_check"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 28,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.get_build_steps"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 93,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.parse_sources"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.parse_sources"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.parse_sources"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.parse_sources"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.parse_sources"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 19,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-explicit",
        "column": 18,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 75,
        "message": "Expression type contains \"Any\" (has type \"str | Any | None\")",
        "offset": 3,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 7,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.get_suggest"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 1,
        "target": "mypy.test.testfinegrained.FineGrainedSuite.get_suggest"
      }
    ],
    "mypy/test/testgraph.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
        "offset": 6,
        "target": "mypy.test.testgraph"
      },
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.build\" does not explicitly export attribute \"BuildSourceSet\"; implicit reexport disabled",
        "offset": 1,
        "target": "mypy.test.testgraph"
      },
      {
        "code": "no-subclass-any",
        "column": 17,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 11,
        "target": "mypy.test.testgraph"
      },
      {
        "code": "no-any-unimported",
        "column": 17,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testgraph"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 29,
        "target": "mypy.test.testgraph.GraphSuite._make_manager"
      }
    ],
    "mypy/test/testinfer.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
        "offset": 5,
        "target": "mypy.test.testinfer"
      },
      {
        "code": "no-subclass-any",
        "column": 31,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 9,
        "target": "mypy.test.testinfer"
      },
      {
        "code": "no-any-unimported",
        "column": 31,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testinfer"
      },
      {
        "code": "no-subclass-any",
        "column": 31,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 216,
        "target": "mypy.test.testinfer"
      },
      {
        "code": "no-any-unimported",
        "column": 31,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testinfer"
      },
      {
        "code": "no-subclass-any",
        "column": 37,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 57,
        "target": "mypy.test.testinfer"
      },
      {
        "code": "no-any-unimported",
        "column": 37,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testinfer"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[int, tuple[Any, ...]]\")",
        "offset": 22,
        "target": "mypy.test.testinfer.OperandComparisonGroupingSuite.test_basic_cases"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[dict[int, tuple[Any, ...]]]\")",
        "offset": 0,
        "target": "mypy.test.testinfer.OperandComparisonGroupingSuite.test_basic_cases"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression type contains \"Any\" (has type \"dict[int, tuple[Any, ...]]\")",
        "offset": 2,
        "target": "mypy.test.testinfer.OperandComparisonGroupingSuite.test_basic_cases"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression type contains \"Any\" (has type \"dict[int, tuple[Any, ...]]\")",
        "offset": 4,
        "target": "mypy.test.testinfer.OperandComparisonGroupingSuite.test_basic_cases"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression type contains \"Any\" (has type \"dict[int, tuple[Any, ...]]\")",
        "offset": 4,
        "target": "mypy.test.testinfer.OperandComparisonGroupingSuite.test_basic_cases"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression type contains \"Any\" (has type \"dict[int, tuple[Any, ...]]\")",
        "offset": 4,
        "target": "mypy.test.testinfer.OperandComparisonGroupingSuite.test_basic_cases"
      }
    ],
    "mypy/test/testmerge.py": [
      {
        "code": "unreachable",
        "column": 12,
        "message": "Statement is unreachable",
        "offset": 179,
        "target": "mypy.test.testmerge.ASTMergeSuite.format_symbol_table_node"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 17,
        "target": "mypy.test.testmerge.ASTMergeSuite.dump_typeinfos_recursive"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testmerge.ASTMergeSuite.dump_typeinfos_recursive"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> (Any, str, str)\")",
        "offset": 30,
        "target": "mypy.test.testmerge.ASTMergeSuite.dump_types"
      },
      {
        "code": "no-any-expr",
        "column": 59,
        "message": "Expression type contains \"Any\" (has type \"(Any, str, str)\")",
        "offset": 0,
        "target": "mypy.test.testmerge.ASTMergeSuite.dump_types"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testmerge.ASTMergeSuite.dump_types"
      }
    ],
    "mypy/test/testmodulefinder.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
        "offset": 10,
        "target": "mypy.test.testmodulefinder"
      },
      {
        "code": "no-subclass-any",
        "column": 24,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 5,
        "target": "mypy.test.testmodulefinder"
      },
      {
        "code": "no-any-unimported",
        "column": 24,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testmodulefinder"
      },
      {
        "code": "no-subclass-any",
        "column": 36,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 128,
        "target": "mypy.test.testmodulefinder"
      },
      {
        "code": "no-any-unimported",
        "column": 36,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testmodulefinder"
      }
    ],
    "mypy/test/testpep561.py": [
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 164,
        "target": "mypy.test.testpep561.parse_mypy_args"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypy.test.testpep561.parse_mypy_args"
      },
      {
        "code": "unreachable",
        "column": 4,
        "message": "Statement is unreachable",
        "offset": 5,
        "target": "mypy.test.testpep561.test_mypy_path_is_respected"
      }
    ],
    "mypy/test/testpythoneval.py": [
      {
        "code": "unreachable",
        "column": 12,
        "message": "Statement is unreachable",
        "offset": 71,
        "target": "mypy.test.testpythoneval.test_python_evaluation"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 7,
        "target": "mypy.test.testpythoneval.test_python_evaluation"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypy.test.testpythoneval.test_python_evaluation"
      }
    ],
    "mypy/test/testreports.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
        "offset": 4,
        "target": "mypy.test.testreports"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[import]\" instead)",
        "offset": 5,
        "target": null
      },
      {
        "code": "no-subclass-any",
        "column": 27,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 7,
        "target": "mypy.test.testreports"
      },
      {
        "code": "no-any-unimported",
        "column": 27,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testreports"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypy.test.testreports"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 5,
        "target": "mypy.test.testreports"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[import]\" instead)",
        "offset": 2,
        "target": null
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 9,
        "target": "mypy.test.testreports.CoberturaReportSuite.test_as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.test.testreports.CoberturaReportSuite.test_as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.test.testreports.CoberturaReportSuite.test_as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 17,
        "target": "mypy.test.testreports.CoberturaReportSuite.test_as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypy.test.testreports.CoberturaReportSuite.test_as_xml"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testreports.CoberturaReportSuite.test_as_xml"
      }
    ],
    "mypy/test/testsemanal.py": [
      {
        "code": "redundant-expr",
        "column": 15,
        "message": "Left operand of \"and\" is always true",
        "offset": 202,
        "target": "mypy.test.testsemanal.TypeInfoMap.__str__"
      }
    ],
    "mypy/test/testsolve.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
        "offset": 5,
        "target": "mypy.test.testsolve"
      },
      {
        "code": "no-subclass-any",
        "column": 17,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 7,
        "target": "mypy.test.testsolve"
      },
      {
        "code": "no-any-unimported",
        "column": 17,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testsolve"
      }
    ],
    "mypy/test/teststubgen.py": [
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"(_FT) -> _FT\")",
        "offset": 37,
        "target": "mypy.test.teststubgen"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"(_FT) -> _FT\")",
        "offset": 21,
        "target": "mypy.test.teststubgen"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"(_FT) -> _FT\")",
        "offset": 20,
        "target": "mypy.test.teststubgen"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 21,
        "target": "mypy.test.teststubgen.StubgenCmdLineSuite.run"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 2,
        "target": "mypy.test.teststubgen.StubgenCmdLineSuite.run"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 15,
        "target": "mypy.test.teststubgen.StubgenCliParseSuite.test_walk_packages"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"(_FT) -> _FT\")",
        "offset": 342,
        "target": "mypy.test.teststubgen"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"(_FT) -> _FT\")",
        "offset": 18,
        "target": "mypy.test.teststubgen"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 136,
        "target": "mypy.test.teststubgen.StubgenPythonSuite.parse_flags"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypy.test.teststubgen.StubgenPythonSuite.parse_flags"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 3,
        "target": "mypy.test.teststubgen.StubgenPythonSuite.parse_flags"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypy.test.teststubgen.StubgenPythonSuite.parse_flags"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 1,
        "target": "mypy.test.teststubgen.StubgenPythonSuite.parse_flags"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 9,
        "target": "mypy.test.teststubgen.StubgenPythonSuite.parse_modules"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypy.test.teststubgen.StubgenPythonSuite.parse_modules"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"type[TestClass]\")",
        "offset": 109,
        "target": "mypy.test.teststubgen.StubgencSuite.test_generate_c_type_inheritance_builtin_type"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 144,
        "target": "mypy.test.teststubgen.StubgencSuite.test_generate_c_property_with_pybind11"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.test.teststubgen.StubgencSuite.test_generate_c_property_with_pybind11"
      }
    ],
    "mypy/test/teststubtest.py": [
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 135,
        "target": "mypy.test.teststubtest.collect_cases"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 8,
        "target": "mypy.test.teststubtest.collect_cases"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 1,
        "target": "mypy.test.teststubtest.collect_cases"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.test.teststubtest.collect_cases"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.test.teststubtest.collect_cases"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypy.test.teststubtest.collect_cases"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.test.teststubtest.collect_cases"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.test.teststubtest.collect_cases"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.test.teststubtest.collect_cases"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.test.teststubtest.collect_cases"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"(VarArg(Any), KwArg(Any)) -> None\")",
        "offset": 24,
        "target": "mypy.test.teststubtest.collect_cases"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 4,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 18,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 21,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 23,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 40,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 28,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 34,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 64,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 17,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 66,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 55,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 83,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 63,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 35,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 19,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 16,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 33,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 5,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 6,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 7,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 28,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 12,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 15,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 31,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 33,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 43,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 34,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"((...) -> Iterator[Case]) -> (...) -> None\")",
        "offset": 21,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-decorated",
        "column": 4,
        "message": "Type of decorated function contains type \"Any\" (\"(...) -> None\")",
        "offset": 1,
        "target": "mypy.test.teststubtest"
      },
      {
        "code": "no-any-explicit",
        "column": 8,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 183,
        "target": "mypy.test.teststubtest.StubtestMiscUnit.test_signature"
      },
      {
        "code": "no-any-expr",
        "column": 81,
        "message": "Expression type contains \"Any\" (has type \"(int, int, NamedArg(int, 'c'), DefaultNamedArg(int, 'd'), KwArg(Any)) -> None\")",
        "offset": 4,
        "target": "mypy.test.teststubtest.StubtestMiscUnit.test_signature"
      },
      {
        "code": "no-any-expr",
        "column": 81,
        "message": "Expression type contains \"Any\" (has type \"(int, int, NamedArg(int, 'c'), DefaultNamedArg(int, 'd'), KwArg(Any)) -> None\")",
        "offset": 0,
        "target": "mypy.test.teststubtest.StubtestMiscUnit.test_signature"
      }
    ],
    "mypy/test/testsubtypes.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
        "offset": 1,
        "target": "mypy.test.testsubtypes"
      },
      {
        "code": "no-subclass-any",
        "column": 21,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 7,
        "target": "mypy.test.testsubtypes"
      },
      {
        "code": "no-any-unimported",
        "column": 21,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testsubtypes"
      }
    ],
    "mypy/test/testtypegen.py": [
      {
        "code": "redundant-expr",
        "column": 19,
        "message": "Left operand of \"and\" is always true",
        "offset": 52,
        "target": "mypy.test.testtypegen.TypeExportSuite.run_case"
      },
      {
        "code": "truthy-bool",
        "column": 65,
        "message": "Expression has type \"Type\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 0,
        "target": "mypy.test.testtypegen.TypeExportSuite.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> (Any, str, str)\")",
        "offset": 10,
        "target": "mypy.test.testtypegen.TypeExportSuite.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"(Any, str, str)\")",
        "offset": 0,
        "target": "mypy.test.testtypegen.TypeExportSuite.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.test.testtypegen.TypeExportSuite.run_case"
      }
    ],
    "mypy/test/testtypes.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
        "offset": 5,
        "target": "mypy.test.testtypes"
      },
      {
        "code": "no-subclass-any",
        "column": 17,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 19,
        "target": "mypy.test.testtypes"
      },
      {
        "code": "no-any-unimported",
        "column": 17,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testtypes"
      },
      {
        "code": "no-subclass-any",
        "column": 19,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 106,
        "target": "mypy.test.testtypes"
      },
      {
        "code": "no-any-unimported",
        "column": 19,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testtypes"
      },
      {
        "code": "no-subclass-any",
        "column": 16,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 429,
        "target": "mypy.test.testtypes"
      },
      {
        "code": "no-any-unimported",
        "column": 16,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testtypes"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 245,
        "target": "mypy.test.testtypes.JoinSuite.test_simple_type_objects"
      },
      {
        "code": "no-subclass-any",
        "column": 16,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 94,
        "target": "mypy.test.testtypes"
      },
      {
        "code": "no-any-unimported",
        "column": 16,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testtypes"
      },
      {
        "code": "no-subclass-any",
        "column": 20,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 203,
        "target": "mypy.test.testtypes"
      },
      {
        "code": "no-any-unimported",
        "column": 20,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testtypes"
      },
      {
        "code": "no-subclass-any",
        "column": 32,
        "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
        "offset": 44,
        "target": "mypy.test.testtypes"
      },
      {
        "code": "no-any-unimported",
        "column": 32,
        "message": "Base type Suite becomes \"Any (from unimported type)\" due to an unfollowed import",
        "offset": 0,
        "target": "mypy.test.testtypes"
      }
    ],
    "mypy/type_visitor.py": [
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[misc]\" instead)",
        "offset": 186,
        "target": null
      },
      {
        "code": "no-any-explicit",
        "column": 25,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 36,
        "target": "mypy.type_visitor.TypeTranslator.visit_tuple_type"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.type_visitor.TypeTranslator.visit_tuple_type"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.type_visitor.TypeTranslator.visit_tuple_type"
      },
      {
        "code": "no-any-explicit",
        "column": 29,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 11,
        "target": "mypy.type_visitor.TypeTranslator.visit_typeddict_type"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.type_visitor.TypeTranslator.visit_typeddict_type"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.type_visitor.TypeTranslator.visit_typeddict_type"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[misc]\" instead)",
        "offset": 5,
        "target": null
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[misc, no-any-expr]\" instead)",
        "offset": 22,
        "target": null
      }
    ],
    "mypy/typeanal.py": [
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 971,
        "target": "mypy.typeanal.TypeAnalyser.analyze_callable_type"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[misc]\" instead)",
        "offset": 428,
        "target": null
      }
    ],
    "mypy/typeops.py": [
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 101,
        "target": "mypy.typeops.type_object_type_from_function"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 118,
        "target": "mypy.typeops.bind_self"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 52,
        "target": "mypy.typeops.bind_self"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.typeops.bind_self"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 207,
        "target": "mypy.typeops._get_type_special_method_bool_ret_type"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 333,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"dict[str, (set[Any], list[int])]\")",
        "offset": 6,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"dict[str, (set[Any], list[int])]\")",
        "offset": 1,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"(set[Any], list[int])\")",
        "offset": 0,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 0,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 0,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 2,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"dict[str, (set[Any], list[int])]\")",
        "offset": 2,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"(set[Any], list[int])\")",
        "offset": 0,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"dict[str, (set[Any], list[int])]\")",
        "offset": 0,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"(set[Any], list[int])\")",
        "offset": 0,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 0,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 1,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"set[Any]\")",
        "offset": 2,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 4,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.typeops.try_contracting_literals_in_union"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 59,
        "target": "mypy.typeops.custom_special_method"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.typeops.custom_special_method"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 74,
        "target": "mypy.typeops.infer_impl_from_parts"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 1,
        "target": "mypy.typeops.infer_impl_from_parts"
      }
    ],
    "mypy/types.py": [
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 26,
        "target": "mypy.types"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypy.types"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 141,
        "target": "mypy.types"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 185,
        "target": "mypy.types.TypeAliasType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.TypeAliasType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.types.TypeAliasType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 181,
        "target": "mypy.types.TypeVarType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 5,
        "target": "mypy.types.TypeVarType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.TypeVarType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.types.TypeVarType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.types.TypeVarType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.TypeVarType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression has type \"Any\"",
        "offset": 59,
        "target": "mypy.types.ParamSpecType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.ParamSpecType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.ParamSpecType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.types.ParamSpecType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.ParamSpecType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.types.ParamSpecType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 25,
        "target": "mypy.types.ParamSpecType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 12,
        "target": "mypy.types.ParamSpecType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 18,
        "target": "mypy.types.TypeVarTupleType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 9,
        "target": "mypy.types.TypeVarTupleType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any\"",
        "offset": 69,
        "target": "mypy.types.UnboundType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.types.UnboundType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 27,
        "target": "mypy.types.UnboundType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 2,
        "target": "mypy.types.UnboundType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.UnboundType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.types.UnboundType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.types.UnboundType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.UnboundType.deserialize"
      },
      {
        "code": "no-any-return",
        "column": 8,
        "message": "Returning Any from function declared to return \"T\"",
        "offset": 27,
        "target": "mypy.types.CallableArgument.accept"
      },
      {
        "code": "no-any-return",
        "column": 8,
        "message": "Returning Any from function declared to return \"T\"",
        "offset": 25,
        "target": "mypy.types.TypeList.accept"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 23,
        "target": "mypy.types.UnpackType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.types.UnpackType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 46,
        "target": "mypy.types.AnyType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 65,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.AnyType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.types.AnyType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.types.AnyType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 13,
        "target": "mypy.types.AnyType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.types.AnyType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 101,
        "target": "mypy.types.UninhabitedType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.types.UninhabitedType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 28,
        "target": "mypy.types.NoneType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.types.NoneType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 43,
        "target": "mypy.types.DeletedType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.types.DeletedType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 124,
        "target": "mypy.types.Instance.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 11,
        "target": "mypy.types.Instance.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 13,
        "target": "mypy.types.Instance.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 73,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.Instance.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.types.Instance.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 73,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.types.Instance.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression has type \"Any\"",
        "offset": 92,
        "target": "mypy.types.Parameters.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.Parameters.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 66,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.Parameters.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.types.Parameters.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.Parameters.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.types.Parameters.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.Parameters.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.Parameters.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 74,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.Parameters.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.types.Parameters.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 97,
        "target": "mypy.types.Parameters.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypy.types.Parameters.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.Parameters.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypy.types.Parameters.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.Parameters.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 2,
        "target": "mypy.types.Parameters.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.Parameters.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.types.Parameters.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.types.Parameters.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.Parameters.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.Parameters.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.Parameters.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.types.Parameters.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.Parameters.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 8,
        "target": "mypy.types.Parameters.__eq__"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.types.Parameters.__eq__"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 42,
        "target": "mypy.types.CallableType.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any] | None\")",
        "offset": 43,
        "target": "mypy.types.CallableType.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.types.CallableType.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 10,
        "target": "mypy.types.CallableType.__init__"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 12,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 64,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 54,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 60,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 72,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 72,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 72,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 72,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 74,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.copy_modified"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 198,
        "target": "mypy.types.CallableType.__eq__"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 14,
        "target": "mypy.types.CallableType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypy.types.CallableType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.CallableType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypy.types.CallableType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.CallableType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 6,
        "target": "mypy.types.CallableType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.CallableType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 3,
        "target": "mypy.types.CallableType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.CallableType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, dict[Any, Any])\")",
        "offset": 2,
        "target": "mypy.types.CallableType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"dict[Any, Any]\")",
        "offset": 0,
        "target": "mypy.types.CallableType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.types.CallableType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.types.CallableType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.types.CallableType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.types.CallableType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.CallableType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.CallableType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.CallableType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.types.CallableType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 62,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.CallableType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypy.types.CallableType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.CallableType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 65,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.CallableType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 64,
        "target": "mypy.types.Overloaded.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypy.types.Overloaded.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.Overloaded.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.types.Overloaded.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.Overloaded.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 0,
        "target": "mypy.types.Overloaded.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.Overloaded.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 65,
        "target": "mypy.types.TupleType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypy.types.TupleType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.TupleType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.types.TupleType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.TupleType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.TupleType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 72,
        "target": "mypy.types.TypedDictType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypy.types.TypedDictType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.TypedDictType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.TypedDictType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypy.types.TypedDictType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.TypedDictType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypy.types.TypedDictType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.TypedDictType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.TypedDictType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.TypedDictType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"list[(Any, Type)]\")",
        "offset": 0,
        "target": "mypy.types.TypedDictType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.TypedDictType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.TypedDictType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.TypedDictType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"(Any, Type)\")",
        "offset": 0,
        "target": "mypy.types.TypedDictType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"(Any, Type)\")",
        "offset": 0,
        "target": "mypy.types.TypedDictType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.TypedDictType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.TypedDictType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.TypedDictType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.TypedDictType.deserialize"
      },
      {
        "code": "no-any-return",
        "column": 8,
        "message": "Returning Any from function declared to return \"T\"",
        "offset": 116,
        "target": "mypy.types.RawExpressionType.accept"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 92,
        "target": "mypy.types.LiteralType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypy.types.LiteralType.deserialize"
      },
      {
        "code": "no-any-return",
        "column": 8,
        "message": "Returning Any from function declared to return \"T\"",
        "offset": 26,
        "target": "mypy.types.StarType.accept"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 72,
        "target": "mypy.types.UnionType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypy.types.UnionType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypy.types.UnionType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypy.types.UnionType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types.UnionType.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types.UnionType.deserialize"
      },
      {
        "code": "no-any-return",
        "column": 8,
        "message": "Returning Any from function declared to return \"T\"",
        "offset": 52,
        "target": "mypy.types.EllipsisType.accept"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 71,
        "target": "mypy.types.TypeType.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypy.types.TypeType.deserialize"
      },
      {
        "code": "no-any-return",
        "column": 8,
        "message": "Returning Any from function declared to return \"T\"",
        "offset": 29,
        "target": "mypy.types.PlaceholderType.accept"
      },
      {
        "code": "unreachable",
        "column": 12,
        "message": "Statement is unreachable",
        "offset": 151,
        "target": "mypy.types.TypeStrVisitor.visit_type_var"
      },
      {
        "code": "truthy-bool",
        "column": 30,
        "message": "Member \"upper_bound\" has type \"Type\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 13,
        "target": "mypy.types.TypeStrVisitor.visit_type_var"
      },
      {
        "code": "unreachable",
        "column": 12,
        "message": "Statement is unreachable",
        "offset": 11,
        "target": "mypy.types.TypeStrVisitor.visit_param_spec"
      },
      {
        "code": "unreachable",
        "column": 12,
        "message": "Statement is unreachable",
        "offset": 40,
        "target": "mypy.types.TypeStrVisitor.visit_type_var_tuple"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"partial_fallback\" has type \"Instance\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 83,
        "target": "mypy.types.TypeStrVisitor.visit_tuple_type"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"partial_fallback\" has type \"Instance\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 0,
        "target": "mypy.types.TypeStrVisitor.visit_tuple_type"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"fallback\" has type \"Instance\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 20,
        "target": "mypy.types.TypeStrVisitor.visit_typeddict_type"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"fallback\" has type \"Instance\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 0,
        "target": "mypy.types.TypeStrVisitor.visit_typeddict_type"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 95,
        "target": "mypy.types.strip_type"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 139,
        "target": "mypy.types"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.types"
      },
      {
        "code": "no-any-expr",
        "column": 0,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypy.types"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 1,
        "target": "mypy.types"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"(str, Any)\")",
        "offset": 0,
        "target": "mypy.types"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypy.types"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
        "offset": 0,
        "target": "mypy.types"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypy.types"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypy.types"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"type[type]\")",
        "offset": 0,
        "target": "mypy.types"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"type[type]\")",
        "offset": 0,
        "target": "mypy.types"
      }
    ],
    "mypy/util.py": [
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"bytes | Any\")",
        "offset": 118,
        "target": "mypy.util.find_python_encoding"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"bytes | Any\")",
        "offset": 1,
        "target": "mypy.util.find_python_encoding"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.util.find_python_encoding"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.util.find_python_encoding"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.util.find_python_encoding"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.util.find_python_encoding"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.util.find_python_encoding"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 0,
        "target": "mypy.util.find_python_encoding"
      },
      {
        "code": "no-any-expr",
        "column": 64,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypy.util.find_python_encoding"
      },
      {
        "code": "no-any-expr",
        "column": 64,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypy.util.find_python_encoding"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 2,
        "target": "mypy.util.find_python_encoding"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"(str | Any, int)\")",
        "offset": 0,
        "target": "mypy.util.find_python_encoding"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 254,
        "target": "mypy.util.replace_object_state"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypy.util.replace_object_state"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypy.util.replace_object_state"
      }
    ],
    "mypyc/analysis/dataflow.py": [
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 35,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> int\")",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"(Any) -> Any\")",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> int\")",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"(Any) -> Any\")",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-return",
        "column": 68,
        "message": "Returning Any from function declared to return \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\"",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-return",
        "column": 68,
        "message": "Returning Any from function declared to return \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\"",
        "offset": 0,
        "target": "mypyc.analysis.dataflow.CFG.__str__"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"type[dict[Any, Any]]\")",
        "offset": 84,
        "target": "mypyc.analysis.dataflow"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"type[dict[Any, Any]]\")",
        "offset": 0,
        "target": "mypyc.analysis.dataflow"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"type[dict[Any, Any]]\")",
        "offset": 0,
        "target": "mypyc.analysis.dataflow"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"type[dict[Any, Any]]\")",
        "offset": 0,
        "target": "mypyc.analysis.dataflow"
      }
    ],
    "mypyc/build.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.build\" does not explicitly export attribute \"BuildSource\"; implicit reexport disabled",
        "offset": 33,
        "target": "mypyc.build"
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[import]\" instead)",
        "offset": 17,
        "target": null
      },
      {
        "code": "ignore-without-code",
        "column": -1,
        "message": "\"type: ignore\" comment without error code (consider \"type: ignore[no-redef]\" instead)",
        "offset": 16,
        "target": null
      },
      {
        "code": "no-any-unimported",
        "column": 0,
        "message": "Return type becomes \"(list[Any (from unimported type)], list[Any (from unimported type)], Options)\" due to an unfollowed import",
        "offset": 24,
        "target": "mypyc.build.get_mypy_config"
      },
      {
        "code": "no-any-unimported",
        "column": 0,
        "message": "Argument 1 to \"generate_c\" becomes \"list[Any (from unimported type)]\" due to an unfollowed import",
        "offset": 83,
        "target": "mypyc.build.generate_c"
      },
      {
        "code": "no-any-unimported",
        "column": 0,
        "message": "Argument 3 to \"generate_c\" becomes \"list[(list[Any (from unimported type)], str | None)]\" due to an unfollowed import",
        "offset": 0,
        "target": "mypyc.build.generate_c"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 21,
        "target": "mypyc.build.generate_c"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.build.generate_c"
      },
      {
        "code": "no-any-expr",
        "column": 77,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 14,
        "target": "mypyc.build.generate_c"
      },
      {
        "code": "no-any-expr",
        "column": 77,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.build.generate_c"
      },
      {
        "code": "no-any-unimported",
        "column": 0,
        "message": "Argument 1 to \"build_using_shared_lib\" becomes \"list[Any (from unimported type)]\" due to an unfollowed import",
        "offset": 25,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 26,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 4,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"(Any (from unimported type), Any (from unimported type))\")",
        "offset": 1,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 2,
        "target": "mypyc.build.build_using_shared_lib"
      },
      {
        "code": "no-any-unimported",
        "column": 0,
        "message": "Argument 1 to \"build_single_module\" becomes \"list[Any (from unimported type)]\" due to an unfollowed import",
        "offset": 8,
        "target": "mypyc.build.build_single_module"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 9,
        "target": "mypyc.build.build_single_module"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_single_module"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.build_single_module"
      },
      {
        "code": "no-any-unimported",
        "column": 0,
        "message": "Return type becomes \"list[(list[Any (from unimported type)], str | None)]\" due to an unfollowed import",
        "offset": 35,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-unimported",
        "column": 0,
        "message": "Argument 1 to \"construct_groups\" becomes \"list[Any (from unimported type)]\" due to an unfollowed import",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-unimported",
        "column": 8,
        "message": "Type of variable becomes \"list[(list[Any (from unimported type)], str | None)]\" due to an unfollowed import",
        "offset": 16,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], None)\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 68,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 5,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 55,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 1,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 1,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"set[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 1,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 1,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], None)\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 58,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], None)\")",
        "offset": 2,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(int, (list[Any (from unimported type)], str | None))\")",
        "offset": 3,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(int, (list[Any (from unimported type)], str | None))\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"enumerate[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 2,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 59,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 1,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 2,
        "target": "mypyc.build.construct_groups"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 14,
        "target": "mypyc.build.get_header_deps"
      },
      {
        "code": "no-any-unimported",
        "column": 0,
        "message": "Return type becomes \"(list[(list[Any (from unimported type)], str | None)], list[(list[str], list[str])])\" due to an unfollowed import",
        "offset": 5,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], list[Any (from unimported type)], Options)\")",
        "offset": 11,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], list[Any (from unimported type)], Options)\")",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 7,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 4,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 4,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 1,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 66,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 66,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 16,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"(list[(list[Any (from unimported type)], str | None)], list[(list[str], list[str])])\")",
        "offset": 0,
        "target": "mypyc.build.mypyc_build"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"(list[(list[Any (from unimported type)], str | None)], list[(list[str], list[str])])\")",
        "offset": 65,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"(list[(list[Any (from unimported type)], str | None)], list[(list[str], list[str])])\")",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 5,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 9,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"((list[Any (from unimported type)], str | None), (list[str], list[str]))\")",
        "offset": 40,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"((list[Any (from unimported type)], str | None), (list[str], list[str]))\")",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"zip[((list[Any (from unimported type)], str | None), (list[str], list[str]))]\")",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 3,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.build.mypycify"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 3,
        "target": "mypyc.build.mypycify"
      }
    ],
    "mypyc/codegen/emitclass.py": [
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> str\")",
        "offset": 146,
        "target": "mypyc.codegen.emitclass.generate_slots"
      },
      {
        "code": "no-any-expr",
        "column": 80,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.codegen.emitclass.generate_slots"
      }
    ],
    "mypyc/codegen/emitfunc.py": [
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"ann\" has type \"object\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 408,
        "target": "mypyc.codegen.emitfunc.FunctionEmitterVisitor.visit_load_static"
      },
      {
        "code": "truthy-bool",
        "column": 11,
        "message": "Member \"ann\" has type \"object\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 150,
        "target": "mypyc.codegen.emitfunc.FunctionEmitterVisitor.visit_load_global"
      }
    ],
    "mypyc/codegen/emitmodule.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.build\" does not explicitly export attribute \"BuildSource\"; implicit reexport disabled",
        "offset": 12,
        "target": "mypyc.codegen.emitmodule"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression type contains \"Any\" (has type \"type[list[Any]]\")",
        "offset": 60,
        "target": "mypyc.codegen.emitmodule"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression type contains \"Any\" (has type \"type[list[Any]]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression type contains \"Any\" (has type \"type[list[Any]]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression type contains \"Any\" (has type \"type[list[Any]]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule"
      },
      {
        "code": "no-any-unimported",
        "column": 4,
        "message": "Argument 4 to \"__init__\" becomes \"list[(list[Any (from unimported type)], str | None)]\" due to an unfollowed import",
        "offset": 25,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 4,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 1,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"Generator[Any (from unimported type), None, None]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"Generator[Any (from unimported type), None, None]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"(str | None, list[Any (from unimported type)])\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 33,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
      },
      {
        "code": "no-any-unimported",
        "column": 0,
        "message": "Argument 1 to \"parse_and_typecheck\" becomes \"list[Any (from unimported type)]\" due to an unfollowed import",
        "offset": 10,
        "target": "mypyc.codegen.emitmodule.parse_and_typecheck"
      },
      {
        "code": "no-any-unimported",
        "column": 0,
        "message": "Argument 4 to \"parse_and_typecheck\" becomes \"list[(list[Any (from unimported type)], str | None)]\" due to an unfollowed import",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.parse_and_typecheck"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 9,
        "target": "mypyc.codegen.emitmodule.parse_and_typecheck"
      },
      {
        "code": "no-any-expr",
        "column": 73,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 4,
        "target": "mypyc.codegen.emitmodule.parse_and_typecheck"
      },
      {
        "code": "no-any-unimported",
        "column": 0,
        "message": "Argument 1 to \"compile_ir_to_c\" becomes \"list[(list[Any (from unimported type)], str | None)]\" due to an unfollowed import",
        "offset": 87,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 12,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"dict[Any (from unimported type), str]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 1,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 59,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 2,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 83,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 5,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"list[(Any (from unimported type), ModuleIR)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"(Any (from unimported type), ModuleIR)\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 79,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 1,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"list[(Any (from unimported type), ModuleIR)]\")",
        "offset": 1,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[(Any (from unimported type), ModuleIR)]\")",
        "offset": 4,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"dict[Any (from unimported type), str]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 81,
        "target": "mypyc.codegen.emitmodule.load_scc_from_cache"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.codegen.emitmodule.load_scc_from_cache"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.load_scc_from_cache"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 4,
        "target": "mypyc.codegen.emitmodule.load_scc_from_cache"
      },
      {
        "code": "no-any-unimported",
        "column": 0,
        "message": "Argument 4 to \"compile_modules_to_c\" becomes \"list[(list[Any (from unimported type)], str | None)]\" due to an unfollowed import",
        "offset": 5,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 25,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"dict[Any (from unimported type), str | None]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 64,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 85,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"dict[Any (from unimported type), str | None]\")",
        "offset": 1,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 7,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"dict[Any (from unimported type), str | None]\")",
        "offset": 3,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 2,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"(list[Any (from unimported type)], str | None)\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"list[Any (from unimported type)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
      }
    ],
    "mypyc/codegen/literals.py": [
      {
        "code": "no-any-explicit",
        "column": 40,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 56,
        "target": "mypyc.codegen.literals.Literals.record_literal"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.codegen.literals.Literals.record_literal"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.codegen.literals.Literals.record_literal"
      },
      {
        "code": "no-any-explicit",
        "column": 43,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 81,
        "target": "mypyc.codegen.literals.Literals.encoded_tuple_values"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.codegen.literals.Literals.encoded_tuple_values"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.codegen.literals.Literals.encoded_tuple_values"
      }
    ],
    "mypyc/common.py": [
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 70,
        "target": "mypyc.common"
      }
    ],
    "mypyc/ir/class_ir.py": [
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> (int, Any)\")",
        "offset": 311,
        "target": "mypyc.ir.class_ir.ClassIR.concrete_subclasses"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"(int, Any)\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.concrete_subclasses"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.concrete_subclasses"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.concrete_subclasses"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression type contains \"Any\" (has type \"Any | list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.concrete_subclasses"
      },
      {
        "code": "no-any-expr",
        "column": 65,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.concrete_subclasses"
      },
      {
        "code": "no-any-expr",
        "column": 70,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.concrete_subclasses"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 6,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 16,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 3,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 3,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 7,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 4,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 6,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any] | None)\")",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"list[Any] | None\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 4,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 6,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 76,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 14,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"Generator[(Any, RType), None, None]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(Any, RType)\")",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(Any, RType)\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"Generator[(Any, FuncDecl), None, None]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"(Any, FuncDecl)\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"(Any, FuncDecl)\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 87,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 87,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"Generator[(Any, FuncIR), None, None]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"(Any, FuncIR)\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"(Any, FuncIR)\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"Generator[((ClassIR, Any), FuncIR), None, None]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"((ClassIR, Any), FuncIR)\")",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"((ClassIR, Any), FuncIR)\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"(ClassIR, Any)\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"(ClassIR, Any)\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression type contains \"Any\" (has type \"Generator[(Any, RType), None, None]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 39,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(Any, RType)\")",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(Any, RType)\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"Generator[(Any, (FuncIR, FuncIR | None)), None, None]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(Any, (FuncIR, FuncIR | None))\")",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(Any, (FuncIR, FuncIR | None))\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 64,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 64,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 64,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 64,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 48,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 56,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.class_ir.ClassIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 25,
        "target": "mypyc.ir.class_ir.serialize_vtable_entry"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression has type \"Any\"",
        "offset": 14,
        "target": "mypyc.ir.class_ir.deserialize_vtable_entry"
      }
    ],
    "mypyc/ir/func_ir.py": [
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 38,
        "target": "mypyc.ir.func_ir.RuntimeArg.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 26,
        "target": "mypyc.ir.func_ir.FuncSignature.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 0,
        "target": "mypyc.ir.func_ir.FuncSignature.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.func_ir.FuncSignature.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 5,
        "target": "mypyc.ir.func_ir.FuncSignature.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.func_ir.FuncSignature.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 75,
        "target": "mypyc.ir.func_ir.FuncDecl.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any\"",
        "offset": 15,
        "target": "mypyc.ir.func_ir.FuncDecl.get_id_from_json"
      },
      {
        "code": "no-any-expr",
        "column": 67,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.func_ir.FuncDecl.get_id_from_json"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.ir.func_ir.FuncDecl.get_id_from_json"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.func_ir.FuncDecl.get_id_from_json"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.func_ir.FuncDecl.get_id_from_json"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.ir.func_ir.FuncDecl.get_id_from_json"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.func_ir.FuncDecl.get_id_from_json"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 82,
        "target": "mypyc.ir.func_ir.FuncIR.serialize"
      }
    ],
    "mypyc/ir/module_ir.py": [
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 29,
        "target": "mypyc.ir.module_ir.ModuleIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 3,
        "target": "mypyc.ir.module_ir.ModuleIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.module_ir.ModuleIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypyc.ir.module_ir.ModuleIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.module_ir.ModuleIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"(str, list[Any])\")",
        "offset": 1,
        "target": "mypyc.ir.module_ir.ModuleIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.ir.module_ir.ModuleIR.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression type contains \"Any\" (has type \"(Any, RType)\")",
        "offset": 0,
        "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 14,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 21,
        "target": "mypyc.ir.module_ir.deserialize_modules"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.ir.module_ir.deserialize_modules"
      },
      {
        "code": "no-any-expr",
        "column": 25,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.module_ir.deserialize_modules"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.module_ir.deserialize_modules"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.module_ir.deserialize_modules"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypyc.ir.module_ir.deserialize_modules"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.ir.module_ir.deserialize_modules"
      }
    ],
    "mypyc/ir/pprint.py": [
      {
        "code": "truthy-bool",
        "column": 39,
        "message": "Member \"ann\" has type \"object\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 96,
        "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.visit_load_static"
      },
      {
        "code": "truthy-bool",
        "column": 39,
        "message": "Member \"ann\" has type \"object\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 87,
        "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.visit_load_global"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 37,
        "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 14,
        "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 8,
        "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
      }
    ],
    "mypyc/ir/rtypes.py": [
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression has type \"Any\"",
        "offset": 100,
        "target": "mypyc.ir.rtypes.deserialize_type"
      },
      {
        "code": "no-any-expr",
        "column": 9,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypyc.ir.rtypes.deserialize_type"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 482,
        "target": "mypyc.ir.rtypes.RTuple.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypyc.ir.rtypes.RTuple.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.rtypes.RTuple.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 219,
        "target": "mypyc.ir.rtypes.RUnion.serialize"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypyc.ir.rtypes.RUnion.deserialize"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.ir.rtypes.RUnion.deserialize"
      }
    ],
    "mypyc/irbuild/builder.py": [
      {
        "code": "no-any-expr",
        "column": 13,
        "message": "Expression has type \"Any\"",
        "offset": 175,
        "target": "mypyc.irbuild.builder.IRBuilder.accept"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 971,
        "target": "mypyc.irbuild.builder.IRBuilder.catch_errors"
      }
    ],
    "mypyc/irbuild/classdef.py": [
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any\"",
        "offset": 86,
        "target": "mypyc.irbuild.classdef.transform_class_def"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypyc.irbuild.classdef.transform_class_def"
      }
    ],
    "mypyc/irbuild/constant_fold.py": [
      {
        "code": "no-any-return",
        "column": 12,
        "message": "Returning Any from function declared to return \"int | None\"",
        "offset": 82,
        "target": "mypyc.irbuild.constant_fold.constant_fold_binary_int_op"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.irbuild.constant_fold.constant_fold_binary_int_op"
      }
    ],
    "mypyc/irbuild/expression.py": [
      {
        "code": "no-any-expr",
        "column": 45,
        "message": "Expression has type \"Any\"",
        "offset": 144,
        "target": "mypyc.irbuild.expression.transform_member_expr"
      }
    ],
    "mypyc/irbuild/for_helpers.py": [
      {
        "code": "truthy-bool",
        "column": 15,
        "message": "\"value_box\" has type \"Value\" which does not implement __bool__ or __len__ so it could always be true in boolean context",
        "offset": 571,
        "target": "mypyc.irbuild.for_helpers.ForSequence.begin_body"
      }
    ],
    "mypyc/irbuild/function.py": [
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 122,
        "target": "mypyc.irbuild.function.transform_lambda_expr"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> Any\")",
        "offset": 157,
        "target": "mypyc.irbuild.function.gen_func_item"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.irbuild.function.gen_func_item"
      }
    ],
    "mypyc/irbuild/ll_builder.py": [
      {
        "code": "attr-defined",
        "column": 0,
        "message": "Module \"mypy.checkexpr\" does not explicitly export attribute \"map_actuals_to_formals\"; implicit reexport disabled",
        "offset": 20,
        "target": "mypyc.irbuild.ll_builder"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 657,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> AnyType\")",
        "offset": 4,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(Any (from unimported type), RuntimeArg)\")",
        "offset": 5,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(Any (from unimported type), RuntimeArg)\")",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"zip[(Any (from unimported type), RuntimeArg)]\")",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 2,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 75,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 75,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 75,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 75,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 75,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 75,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 88,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 88,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(Any (from unimported type), RuntimeArg)\")",
        "offset": 12,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(Any (from unimported type), RuntimeArg)\")",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"zip[(Any (from unimported type), RuntimeArg)]\")",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 7,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 3,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 2,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any (from unimported type)\"",
        "offset": 0,
        "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
      }
    ],
    "mypyc/irbuild/main.py": [
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 48,
        "target": "mypyc.irbuild.main"
      },
      {
        "code": "no-any-explicit",
        "column": 22,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 1,
        "target": "mypyc.irbuild.main"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"(F) -> F\")",
        "offset": 0,
        "target": "mypyc.irbuild.main"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"(F) -> F\")",
        "offset": 0,
        "target": "mypyc.irbuild.main"
      },
      {
        "code": "no-any-expr",
        "column": 1,
        "message": "Expression type contains \"Any\" (has type \"(F) -> F\")",
        "offset": 3,
        "target": "mypyc.irbuild.main"
      }
    ],
    "mypyc/irbuild/mapper.py": [
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 83,
        "target": "mypyc.irbuild.mapper.Mapper.type_to_rtype"
      },
      {
        "code": "no-any-expr",
        "column": 33,
        "message": "Expression type contains \"Any\" (has type \"type[CallableType]\")",
        "offset": 41,
        "target": "mypyc.irbuild.mapper.Mapper.fdef_to_sig"
      }
    ],
    "mypyc/irbuild/prepare.py": [
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 177,
        "target": "mypyc.irbuild.prepare.prepare_class_def"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypyc.irbuild.prepare.prepare_class_def"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypyc.irbuild.prepare.prepare_class_def"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypyc.irbuild.prepare.prepare_class_def"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"Any | None\")",
        "offset": 0,
        "target": "mypyc.irbuild.prepare.prepare_class_def"
      }
    ],
    "mypyc/irbuild/util.py": [
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 61,
        "target": "mypyc.irbuild.util.get_mypyc_attr_literal"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 26,
        "target": "mypyc.irbuild.util.get_mypyc_attrs"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 2,
        "target": "mypyc.irbuild.util.get_mypyc_attrs"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 7,
        "target": "mypyc.irbuild.util.get_mypyc_attrs"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypyc.irbuild.util.get_mypyc_attrs"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.irbuild.util.get_mypyc_attrs"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypyc.irbuild.util.get_mypyc_attrs"
      }
    ],
    "mypyc/test/test_analysis.py": [
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> (Any, Any)\")",
        "offset": 70,
        "target": "mypyc.test.test_analysis.TestAnalysis.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 52,
        "message": "Expression type contains \"Any\" (has type \"(Any, Any)\")",
        "offset": 0,
        "target": "mypyc.test.test_analysis.TestAnalysis.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_analysis.TestAnalysis.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_analysis.TestAnalysis.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 65,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_analysis.TestAnalysis.run_case"
      }
    ],
    "mypyc/test/test_cheader.py": [
      {
        "code": "unreachable",
        "column": 20,
        "message": "Statement is unreachable",
        "offset": 31,
        "target": "mypyc.test.test_cheader.TestHeaderInclusion.test_primitives_included_in_header"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression has type \"Any\"",
        "offset": 8,
        "target": "mypyc.test.test_cheader.TestHeaderInclusion.test_primitives_included_in_header"
      },
      {
        "code": "no-any-expr",
        "column": 24,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 0,
        "target": "mypyc.test.test_cheader.TestHeaderInclusion.test_primitives_included_in_header"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.test.test_cheader.TestHeaderInclusion.test_primitives_included_in_header"
      }
    ],
    "mypyc/test/test_commandline.py": [
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 39,
        "target": "mypyc.test.test_commandline.TestCommandLine.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypyc.test.test_commandline.TestCommandLine.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 78,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 11,
        "target": "mypyc.test.test_commandline.TestCommandLine.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 78,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypyc.test.test_commandline.TestCommandLine.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 78,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypyc.test.test_commandline.TestCommandLine.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 78,
        "message": "Expression type contains \"Any\" (has type \"list[str] | Any\")",
        "offset": 0,
        "target": "mypyc.test.test_commandline.TestCommandLine.run_case"
      }
    ],
    "mypyc/test/test_emitclass.py": [
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> str\")",
        "offset": 11,
        "target": "mypyc.test.test_emitclass.TestEmitClass.test_slot_key"
      }
    ],
    "mypyc/test/test_exceptions.py": [
      {
        "code": "no-any-expr",
        "column": 57,
        "message": "Expression type contains \"Any\" (has type \"list[Any]\")",
        "offset": 53,
        "target": "mypyc.test.test_exceptions.TestExceptionTransform.run_case"
      },
      {
        "code": "no-any-expr",
        "column": 63,
        "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")",
        "offset": 0,
        "target": "mypyc.test.test_exceptions.TestExceptionTransform.run_case"
      }
    ],
    "mypyc/test/test_external.py": [
      {
        "code": "no-any-expr",
        "column": 5,
        "message": "Expression type contains \"Any\" (has type \"(_FT) -> _FT\")",
        "offset": 17,
        "target": "mypyc.test.test_external"
      }
    ],
    "mypyc/test/test_run.py": [
      {
        "code": "no-any-explicit",
        "column": 15,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 101,
        "target": "mypyc.test.test_run.run_setup"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.run_setup"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.run_setup"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.run_setup"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 4,
        "target": "mypyc.test.test_run.run_setup"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.run_setup"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 3,
        "target": "mypyc.test.test_run.run_setup"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.run_setup"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.run_setup"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.run_setup"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"Any | bool\")",
        "offset": 0,
        "target": "mypyc.test.test_run.run_setup"
      },
      {
        "code": "no-any-expr",
        "column": 28,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.run_setup"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Untyped\"",
        "offset": 62,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Untyped\"",
        "offset": 0,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression type contains \"Any\" (has type \"Any (unannotated) | bool\")",
        "offset": 0,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "attr-defined",
        "column": 17,
        "message": "Module has no attribute \"BuildSource\"; maybe \"BuildSourceSet\"?",
        "offset": 18,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "attr-defined",
        "column": 31,
        "message": "Module has no attribute \"BuildSource\"; maybe \"BuildSourceSet\"?",
        "offset": 13,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 10,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 3,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 43,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 8,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 7,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"list[(list[Any (from unimported type)], str | None)]\")",
        "offset": 0,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression has type \"Any\"",
        "offset": 22,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Untyped\"",
        "offset": 7,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"Any (unannotated) | bool\")",
        "offset": 17,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-untyped-usage",
        "column": 8,
        "message": "Usage of untyped name \"debugger\" in typed context",
        "offset": 2,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Untyped\"",
        "offset": 0,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Untyped\"",
        "offset": 1,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Untyped\"",
        "offset": 1,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any (unannotated)\"",
        "offset": 0,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Untyped\"",
        "offset": 2,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 17,
        "message": "Expression has type \"Any (unannotated)\"",
        "offset": 0,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression has type \"Untyped\"",
        "offset": 15,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 2,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": -1,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": -1,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 0,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 0,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"Any (unannotated) | bool\")",
        "offset": 3,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"int | Any\")",
        "offset": 31,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"bool | Any\")",
        "offset": 0,
        "target": "mypyc.test.test_run.TestRun.run_case_step"
      },
      {
        "code": "no-any-explicit",
        "column": 4,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 2,
        "target": "mypyc.test.test_run.TestRun.get_separate"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 7,
        "target": "mypyc.test.test_run.TestRun.get_separate"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypyc.test.test_run.TestRun.get_separate"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> str\")",
        "offset": 60,
        "target": "mypyc.test.test_run.fix_native_line_number"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.fix_native_line_number"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.fix_native_line_number"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.fix_native_line_number"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.fix_native_line_number"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypyc.test.test_run.fix_native_line_number"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypyc.test.test_run.fix_native_line_number"
      },
      {
        "code": "no-any-expr",
        "column": 21,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> str\")",
        "offset": 3,
        "target": "mypyc.test.test_run.fix_native_line_number"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.fix_native_line_number"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.fix_native_line_number"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.fix_native_line_number"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_run.fix_native_line_number"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypyc.test.test_run.fix_native_line_number"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypyc.test.test_run.fix_native_line_number"
      }
    ],
    "mypyc/test/test_serialization.py": [
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 18,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 19,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 30,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 71,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 74,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.get_dict"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypyc.test.test_serialization.get_function_dict"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypyc.test.test_serialization.get_function_dict"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypyc.test.test_serialization.get_function_dict"
      },
      {
        "code": "no-any-expr",
        "column": 4,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypyc.test.test_serialization.get_function_dict"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 1,
        "target": "mypyc.test.test_serialization.get_function_dict"
      },
      {
        "code": "no-any-explicit",
        "column": 0,
        "message": "Explicit \"Any\" is not allowed",
        "offset": 3,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 16,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 16,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 22,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression type contains \"Any\" (has type \"(str, type[Any], type[Any])\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 32,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 61,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 66,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 66,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 70,
        "message": "Expression type contains \"Any\" (has type \"type[Any]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 75,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 75,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 18,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 29,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 41,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 47,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"((Any, Any), Any)\")",
        "offset": 1,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"((Any, Any), Any)\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression type contains \"Any\" (has type \"zip[((Any, Any), Any)]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 49,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 2,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(int, (Any, Any))\")",
        "offset": 4,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(int, (Any, Any))\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(Any, Any)\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression type contains \"Any\" (has type \"(Any, Any)\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 8,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 27,
        "message": "Expression type contains \"Any\" (has type \"enumerate[(Any, Any)]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression type contains \"Any\" (has type \"zip[(Any, Any)]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 44,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 34,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 38,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"Any | str | set[Any]\")",
        "offset": 1,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 31,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 35,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression type contains \"Any\" (has type \"Any | str | set[Any]\")",
        "offset": 1,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression has type \"Any\"",
        "offset": 1,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 40,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression type contains \"Any\" (has type \"Any | str | set[Any]\")",
        "offset": 2,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 15,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 20,
        "message": "Expression has type \"Any\"",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"tuple[Any, ...]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_blobs_same"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 15,
        "target": "mypyc.test.test_serialization.assert_modules_same"
      },
      {
        "code": "no-any-expr",
        "column": 42,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_modules_same"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 3,
        "target": "mypyc.test.test_serialization.assert_modules_same"
      },
      {
        "code": "no-any-expr",
        "column": 50,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_modules_same"
      },
      {
        "code": "no-any-expr",
        "column": 26,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 2,
        "target": "mypyc.test.test_serialization.assert_modules_same"
      },
      {
        "code": "no-any-expr",
        "column": 46,
        "message": "Expression type contains \"Any\" (has type \"dict[str, Any]\")",
        "offset": 0,
        "target": "mypyc.test.test_serialization.assert_modules_same"
      }
    ],
    "mypyc/test/testutil.py": [
      {
        "code": "attr-defined",
        "column": 13,
        "message": "Module has no attribute \"BuildSource\"; maybe \"BuildSourceSet\"?",
        "offset": 114,
        "target": "mypyc.test.testutil.build_ir_for_single_file2"
      },
      {
        "code": "no-any-expr",
        "column": 7,
        "message": "Expression type contains \"Any\" (has type \"Literal[False] | Untyped\")",
        "offset": 59,
        "target": "mypyc.test.testutil.assert_test_output"
      },
      {
        "code": "no-any-expr",
        "column": 37,
        "message": "Expression has type \"Untyped\"",
        "offset": 0,
        "target": "mypyc.test.testutil.assert_test_output"
      },
      {
        "code": "no-any-expr",
        "column": 12,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 13,
        "target": "mypyc.test.testutil.get_func_names"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypyc.test.testutil.get_func_names"
      },
      {
        "code": "no-any-expr",
        "column": 23,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypyc.test.testutil.get_func_names"
      },
      {
        "code": "no-any-expr",
        "column": 11,
        "message": "Expression type contains \"Any\" (has type \"list[str | Any]\")",
        "offset": 1,
        "target": "mypyc.test.testutil.get_func_names"
      },
      {
        "code": "no-any-expr",
        "column": 36,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 86,
        "target": "mypyc.test.testutil.infer_ir_build_options_from_test_name"
      },
      {
        "code": "no-any-expr",
        "column": 53,
        "message": "Expression type contains \"Any\" (has type \"str | Any\")",
        "offset": 0,
        "target": "mypyc.test.testutil.infer_ir_build_options_from_test_name"
      }
    ],
    "mypyc/transform/refcount.py": [
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> int\")",
        "offset": 197,
        "target": "mypyc.transform.refcount.after_branch_decrefs"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> int\")",
        "offset": 0,
        "target": "mypyc.transform.refcount.after_branch_decrefs"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> int\")",
        "offset": 15,
        "target": "mypyc.transform.refcount.after_branch_increfs"
      },
      {
        "code": "no-any-expr",
        "column": 51,
        "message": "Expression type contains \"Any\" (has type \"(Untyped) -> int\")",
        "offset": 0,
        "target": "mypyc.transform.refcount.after_branch_increfs"
      }
    ]
  },
  "format": "1.3",
  "targets": [
    "package:mypy",
    "package:mypyc"
  ]
}